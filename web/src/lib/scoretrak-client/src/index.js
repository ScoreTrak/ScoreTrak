/*
 * Ent Schema API
 * This is an auto generated API description made out of an Ent schema definition
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {Check} from './model/Check';
import {CheckCompetitionRead} from './model/CheckCompetitionRead';
import {CheckCreate} from './model/CheckCreate';
import {CheckList} from './model/CheckList';
import {CheckRead} from './model/CheckRead';
import {CheckRoundsRead} from './model/CheckRoundsRead';
import {CheckServicesRead} from './model/CheckServicesRead';
import {CheckUpdate} from './model/CheckUpdate';
import {ChecksBody} from './model/ChecksBody';
import {ChecksIdBody} from './model/ChecksIdBody';
import {Competition} from './model/Competition';
import {CompetitionCreate} from './model/CompetitionCreate';
import {CompetitionList} from './model/CompetitionList';
import {CompetitionRead} from './model/CompetitionRead';
import {CompetitionTeamsList} from './model/CompetitionTeamsList';
import {CompetitionUpdate} from './model/CompetitionUpdate';
import {CompetitionUsersList} from './model/CompetitionUsersList';
import {CompetitionsBody} from './model/CompetitionsBody';
import {CompetitionsIdBody} from './model/CompetitionsIdBody';
import {Host} from './model/Host';
import {HostCompetitionRead} from './model/HostCompetitionRead';
import {HostCreate} from './model/HostCreate';
import {HostGroup} from './model/HostGroup';
import {HostGroupCompetitionRead} from './model/HostGroupCompetitionRead';
import {HostGroupCreate} from './model/HostGroupCreate';
import {HostGroupHostsList} from './model/HostGroupHostsList';
import {HostGroupList} from './model/HostGroupList';
import {HostGroupRead} from './model/HostGroupRead';
import {HostGroupTeamRead} from './model/HostGroupTeamRead';
import {HostGroupUpdate} from './model/HostGroupUpdate';
import {HostHostGroupRead} from './model/HostHostGroupRead';
import {HostList} from './model/HostList';
import {HostRead} from './model/HostRead';
import {HostServicesList} from './model/HostServicesList';
import {HostTeamRead} from './model/HostTeamRead';
import {HostUpdate} from './model/HostUpdate';
import {HostgroupsBody} from './model/HostgroupsBody';
import {HostgroupsIdBody} from './model/HostgroupsIdBody';
import {HostsBody} from './model/HostsBody';
import {HostsIdBody} from './model/HostsIdBody';
import {InlineResponse400} from './model/InlineResponse400';
import {PropertiesBody} from './model/PropertiesBody';
import {PropertiesIdBody} from './model/PropertiesIdBody';
import {Property} from './model/Property';
import {PropertyCompetitionRead} from './model/PropertyCompetitionRead';
import {PropertyCreate} from './model/PropertyCreate';
import {PropertyList} from './model/PropertyList';
import {PropertyRead} from './model/PropertyRead';
import {PropertyServicesRead} from './model/PropertyServicesRead';
import {PropertyTeamRead} from './model/PropertyTeamRead';
import {PropertyUpdate} from './model/PropertyUpdate';
import {Round} from './model/Round';
import {RoundChecksList} from './model/RoundChecksList';
import {RoundCompetitionRead} from './model/RoundCompetitionRead';
import {RoundCreate} from './model/RoundCreate';
import {RoundList} from './model/RoundList';
import {RoundRead} from './model/RoundRead';
import {RoundUpdate} from './model/RoundUpdate';
import {RoundsBody} from './model/RoundsBody';
import {RoundsIdBody} from './model/RoundsIdBody';
import {Service} from './model/Service';
import {ServiceChecksList} from './model/ServiceChecksList';
import {ServiceCompetitionRead} from './model/ServiceCompetitionRead';
import {ServiceCreate} from './model/ServiceCreate';
import {ServiceHostsRead} from './model/ServiceHostsRead';
import {ServiceList} from './model/ServiceList';
import {ServicePropertiesList} from './model/ServicePropertiesList';
import {ServiceRead} from './model/ServiceRead';
import {ServiceTeamRead} from './model/ServiceTeamRead';
import {ServiceUpdate} from './model/ServiceUpdate';
import {ServicesBody} from './model/ServicesBody';
import {ServicesIdBody} from './model/ServicesIdBody';
import {Team} from './model/Team';
import {TeamCompetitionRead} from './model/TeamCompetitionRead';
import {TeamCreate} from './model/TeamCreate';
import {TeamHostsList} from './model/TeamHostsList';
import {TeamList} from './model/TeamList';
import {TeamRead} from './model/TeamRead';
import {TeamUpdate} from './model/TeamUpdate';
import {TeamUsersList} from './model/TeamUsersList';
import {TeamsBody} from './model/TeamsBody';
import {TeamsIdBody} from './model/TeamsIdBody';
import {User} from './model/User';
import {UserCompetitionsList} from './model/UserCompetitionsList';
import {UserCreate} from './model/UserCreate';
import {UserList} from './model/UserList';
import {UserRead} from './model/UserRead';
import {UserTeamsList} from './model/UserTeamsList';
import {UserUpdate} from './model/UserUpdate';
import {UsersBody} from './model/UsersBody';
import {UsersIdBody} from './model/UsersIdBody';
import {CheckApi} from './api/CheckApi';
import {CompetitionApi} from './api/CompetitionApi';
import {HostApi} from './api/HostApi';
import {HostGroupApi} from './api/HostGroupApi';
import {PropertyApi} from './api/PropertyApi';
import {RoundApi} from './api/RoundApi';
import {ServiceApi} from './api/ServiceApi';
import {TeamApi} from './api/TeamApi';
import {UserApi} from './api/UserApi';

/**
* This_is_an_auto_generated_API_description_made_out_of_an_Ent_schema_definition.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EntSchemaApi = require('index'); // See note below*.
* var xxxSvc = new EntSchemaApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EntSchemaApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EntSchemaApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EntSchemaApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Check model constructor.
     * @property {module:model/Check}
     */
    Check,

    /**
     * The CheckCompetitionRead model constructor.
     * @property {module:model/CheckCompetitionRead}
     */
    CheckCompetitionRead,

    /**
     * The CheckCreate model constructor.
     * @property {module:model/CheckCreate}
     */
    CheckCreate,

    /**
     * The CheckList model constructor.
     * @property {module:model/CheckList}
     */
    CheckList,

    /**
     * The CheckRead model constructor.
     * @property {module:model/CheckRead}
     */
    CheckRead,

    /**
     * The CheckRoundsRead model constructor.
     * @property {module:model/CheckRoundsRead}
     */
    CheckRoundsRead,

    /**
     * The CheckServicesRead model constructor.
     * @property {module:model/CheckServicesRead}
     */
    CheckServicesRead,

    /**
     * The CheckUpdate model constructor.
     * @property {module:model/CheckUpdate}
     */
    CheckUpdate,

    /**
     * The ChecksBody model constructor.
     * @property {module:model/ChecksBody}
     */
    ChecksBody,

    /**
     * The ChecksIdBody model constructor.
     * @property {module:model/ChecksIdBody}
     */
    ChecksIdBody,

    /**
     * The Competition model constructor.
     * @property {module:model/Competition}
     */
    Competition,

    /**
     * The CompetitionCreate model constructor.
     * @property {module:model/CompetitionCreate}
     */
    CompetitionCreate,

    /**
     * The CompetitionList model constructor.
     * @property {module:model/CompetitionList}
     */
    CompetitionList,

    /**
     * The CompetitionRead model constructor.
     * @property {module:model/CompetitionRead}
     */
    CompetitionRead,

    /**
     * The CompetitionTeamsList model constructor.
     * @property {module:model/CompetitionTeamsList}
     */
    CompetitionTeamsList,

    /**
     * The CompetitionUpdate model constructor.
     * @property {module:model/CompetitionUpdate}
     */
    CompetitionUpdate,

    /**
     * The CompetitionUsersList model constructor.
     * @property {module:model/CompetitionUsersList}
     */
    CompetitionUsersList,

    /**
     * The CompetitionsBody model constructor.
     * @property {module:model/CompetitionsBody}
     */
    CompetitionsBody,

    /**
     * The CompetitionsIdBody model constructor.
     * @property {module:model/CompetitionsIdBody}
     */
    CompetitionsIdBody,

    /**
     * The Host model constructor.
     * @property {module:model/Host}
     */
    Host,

    /**
     * The HostCompetitionRead model constructor.
     * @property {module:model/HostCompetitionRead}
     */
    HostCompetitionRead,

    /**
     * The HostCreate model constructor.
     * @property {module:model/HostCreate}
     */
    HostCreate,

    /**
     * The HostGroup model constructor.
     * @property {module:model/HostGroup}
     */
    HostGroup,

    /**
     * The HostGroupCompetitionRead model constructor.
     * @property {module:model/HostGroupCompetitionRead}
     */
    HostGroupCompetitionRead,

    /**
     * The HostGroupCreate model constructor.
     * @property {module:model/HostGroupCreate}
     */
    HostGroupCreate,

    /**
     * The HostGroupHostsList model constructor.
     * @property {module:model/HostGroupHostsList}
     */
    HostGroupHostsList,

    /**
     * The HostGroupList model constructor.
     * @property {module:model/HostGroupList}
     */
    HostGroupList,

    /**
     * The HostGroupRead model constructor.
     * @property {module:model/HostGroupRead}
     */
    HostGroupRead,

    /**
     * The HostGroupTeamRead model constructor.
     * @property {module:model/HostGroupTeamRead}
     */
    HostGroupTeamRead,

    /**
     * The HostGroupUpdate model constructor.
     * @property {module:model/HostGroupUpdate}
     */
    HostGroupUpdate,

    /**
     * The HostHostGroupRead model constructor.
     * @property {module:model/HostHostGroupRead}
     */
    HostHostGroupRead,

    /**
     * The HostList model constructor.
     * @property {module:model/HostList}
     */
    HostList,

    /**
     * The HostRead model constructor.
     * @property {module:model/HostRead}
     */
    HostRead,

    /**
     * The HostServicesList model constructor.
     * @property {module:model/HostServicesList}
     */
    HostServicesList,

    /**
     * The HostTeamRead model constructor.
     * @property {module:model/HostTeamRead}
     */
    HostTeamRead,

    /**
     * The HostUpdate model constructor.
     * @property {module:model/HostUpdate}
     */
    HostUpdate,

    /**
     * The HostgroupsBody model constructor.
     * @property {module:model/HostgroupsBody}
     */
    HostgroupsBody,

    /**
     * The HostgroupsIdBody model constructor.
     * @property {module:model/HostgroupsIdBody}
     */
    HostgroupsIdBody,

    /**
     * The HostsBody model constructor.
     * @property {module:model/HostsBody}
     */
    HostsBody,

    /**
     * The HostsIdBody model constructor.
     * @property {module:model/HostsIdBody}
     */
    HostsIdBody,

    /**
     * The InlineResponse400 model constructor.
     * @property {module:model/InlineResponse400}
     */
    InlineResponse400,

    /**
     * The PropertiesBody model constructor.
     * @property {module:model/PropertiesBody}
     */
    PropertiesBody,

    /**
     * The PropertiesIdBody model constructor.
     * @property {module:model/PropertiesIdBody}
     */
    PropertiesIdBody,

    /**
     * The Property model constructor.
     * @property {module:model/Property}
     */
    Property,

    /**
     * The PropertyCompetitionRead model constructor.
     * @property {module:model/PropertyCompetitionRead}
     */
    PropertyCompetitionRead,

    /**
     * The PropertyCreate model constructor.
     * @property {module:model/PropertyCreate}
     */
    PropertyCreate,

    /**
     * The PropertyList model constructor.
     * @property {module:model/PropertyList}
     */
    PropertyList,

    /**
     * The PropertyRead model constructor.
     * @property {module:model/PropertyRead}
     */
    PropertyRead,

    /**
     * The PropertyServicesRead model constructor.
     * @property {module:model/PropertyServicesRead}
     */
    PropertyServicesRead,

    /**
     * The PropertyTeamRead model constructor.
     * @property {module:model/PropertyTeamRead}
     */
    PropertyTeamRead,

    /**
     * The PropertyUpdate model constructor.
     * @property {module:model/PropertyUpdate}
     */
    PropertyUpdate,

    /**
     * The Round model constructor.
     * @property {module:model/Round}
     */
    Round,

    /**
     * The RoundChecksList model constructor.
     * @property {module:model/RoundChecksList}
     */
    RoundChecksList,

    /**
     * The RoundCompetitionRead model constructor.
     * @property {module:model/RoundCompetitionRead}
     */
    RoundCompetitionRead,

    /**
     * The RoundCreate model constructor.
     * @property {module:model/RoundCreate}
     */
    RoundCreate,

    /**
     * The RoundList model constructor.
     * @property {module:model/RoundList}
     */
    RoundList,

    /**
     * The RoundRead model constructor.
     * @property {module:model/RoundRead}
     */
    RoundRead,

    /**
     * The RoundUpdate model constructor.
     * @property {module:model/RoundUpdate}
     */
    RoundUpdate,

    /**
     * The RoundsBody model constructor.
     * @property {module:model/RoundsBody}
     */
    RoundsBody,

    /**
     * The RoundsIdBody model constructor.
     * @property {module:model/RoundsIdBody}
     */
    RoundsIdBody,

    /**
     * The Service model constructor.
     * @property {module:model/Service}
     */
    Service,

    /**
     * The ServiceChecksList model constructor.
     * @property {module:model/ServiceChecksList}
     */
    ServiceChecksList,

    /**
     * The ServiceCompetitionRead model constructor.
     * @property {module:model/ServiceCompetitionRead}
     */
    ServiceCompetitionRead,

    /**
     * The ServiceCreate model constructor.
     * @property {module:model/ServiceCreate}
     */
    ServiceCreate,

    /**
     * The ServiceHostsRead model constructor.
     * @property {module:model/ServiceHostsRead}
     */
    ServiceHostsRead,

    /**
     * The ServiceList model constructor.
     * @property {module:model/ServiceList}
     */
    ServiceList,

    /**
     * The ServicePropertiesList model constructor.
     * @property {module:model/ServicePropertiesList}
     */
    ServicePropertiesList,

    /**
     * The ServiceRead model constructor.
     * @property {module:model/ServiceRead}
     */
    ServiceRead,

    /**
     * The ServiceTeamRead model constructor.
     * @property {module:model/ServiceTeamRead}
     */
    ServiceTeamRead,

    /**
     * The ServiceUpdate model constructor.
     * @property {module:model/ServiceUpdate}
     */
    ServiceUpdate,

    /**
     * The ServicesBody model constructor.
     * @property {module:model/ServicesBody}
     */
    ServicesBody,

    /**
     * The ServicesIdBody model constructor.
     * @property {module:model/ServicesIdBody}
     */
    ServicesIdBody,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamCompetitionRead model constructor.
     * @property {module:model/TeamCompetitionRead}
     */
    TeamCompetitionRead,

    /**
     * The TeamCreate model constructor.
     * @property {module:model/TeamCreate}
     */
    TeamCreate,

    /**
     * The TeamHostsList model constructor.
     * @property {module:model/TeamHostsList}
     */
    TeamHostsList,

    /**
     * The TeamList model constructor.
     * @property {module:model/TeamList}
     */
    TeamList,

    /**
     * The TeamRead model constructor.
     * @property {module:model/TeamRead}
     */
    TeamRead,

    /**
     * The TeamUpdate model constructor.
     * @property {module:model/TeamUpdate}
     */
    TeamUpdate,

    /**
     * The TeamUsersList model constructor.
     * @property {module:model/TeamUsersList}
     */
    TeamUsersList,

    /**
     * The TeamsBody model constructor.
     * @property {module:model/TeamsBody}
     */
    TeamsBody,

    /**
     * The TeamsIdBody model constructor.
     * @property {module:model/TeamsIdBody}
     */
    TeamsIdBody,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserCompetitionsList model constructor.
     * @property {module:model/UserCompetitionsList}
     */
    UserCompetitionsList,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserList model constructor.
     * @property {module:model/UserList}
     */
    UserList,

    /**
     * The UserRead model constructor.
     * @property {module:model/UserRead}
     */
    UserRead,

    /**
     * The UserTeamsList model constructor.
     * @property {module:model/UserTeamsList}
     */
    UserTeamsList,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
     * The UsersBody model constructor.
     * @property {module:model/UsersBody}
     */
    UsersBody,

    /**
     * The UsersIdBody model constructor.
     * @property {module:model/UsersIdBody}
     */
    UsersIdBody,

    /**
    * The CheckApi service constructor.
    * @property {module:api/CheckApi}
    */
    CheckApi,

    /**
    * The CompetitionApi service constructor.
    * @property {module:api/CompetitionApi}
    */
    CompetitionApi,

    /**
    * The HostApi service constructor.
    * @property {module:api/HostApi}
    */
    HostApi,

    /**
    * The HostGroupApi service constructor.
    * @property {module:api/HostGroupApi}
    */
    HostGroupApi,

    /**
    * The PropertyApi service constructor.
    * @property {module:api/PropertyApi}
    */
    PropertyApi,

    /**
    * The RoundApi service constructor.
    * @property {module:api/RoundApi}
    */
    RoundApi,

    /**
    * The ServiceApi service constructor.
    * @property {module:api/ServiceApi}
    */
    ServiceApi,

    /**
    * The TeamApi service constructor.
    * @property {module:api/TeamApi}
    */
    TeamApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
