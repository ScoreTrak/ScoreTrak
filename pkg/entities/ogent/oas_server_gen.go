// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateApiToken implements createApiToken operation.
	//
	// Creates a new ApiToken and persists it to storage.
	//
	// POST /api-tokens
	CreateApiToken(ctx context.Context, req *CreateApiTokenReq) (CreateApiTokenRes, error)
	// CreateCheck implements createCheck operation.
	//
	// Creates a new Check and persists it to storage.
	//
	// POST /checks
	CreateCheck(ctx context.Context, req *CreateCheckReq) (CreateCheckRes, error)
	// CreateCompetition implements createCompetition operation.
	//
	// Creates a new Competition and persists it to storage.
	//
	// POST /competitions
	CreateCompetition(ctx context.Context, req *CreateCompetitionReq) (CreateCompetitionRes, error)
	// CreateHost implements createHost operation.
	//
	// Creates a new Host and persists it to storage.
	//
	// POST /hosts
	CreateHost(ctx context.Context, req *CreateHostReq) (CreateHostRes, error)
	// CreateHostService implements createHostService operation.
	//
	// Creates a new HostService and persists it to storage.
	//
	// POST /host-services
	CreateHostService(ctx context.Context, req *CreateHostServiceReq) (CreateHostServiceRes, error)
	// CreateHostServiceReport implements createHostServiceReport operation.
	//
	// Creates a new HostServiceReport and persists it to storage.
	//
	// POST /host-service-reports
	CreateHostServiceReport(ctx context.Context, req *CreateHostServiceReportReq) (CreateHostServiceReportRes, error)
	// CreateProperty implements createProperty operation.
	//
	// Creates a new Property and persists it to storage.
	//
	// POST /properties
	CreateProperty(ctx context.Context, req *CreatePropertyReq) (CreatePropertyRes, error)
	// CreateRound implements createRound operation.
	//
	// Creates a new Round and persists it to storage.
	//
	// POST /rounds
	CreateRound(ctx context.Context, req *CreateRoundReq) (CreateRoundRes, error)
	// CreateService implements createService operation.
	//
	// Creates a new Service and persists it to storage.
	//
	// POST /services
	CreateService(ctx context.Context, req *CreateServiceReq) (CreateServiceRes, error)
	// CreateTeam implements createTeam operation.
	//
	// Creates a new Team and persists it to storage.
	//
	// POST /teams
	CreateTeam(ctx context.Context, req *CreateTeamReq) (CreateTeamRes, error)
	// CreateTeamReport implements createTeamReport operation.
	//
	// Creates a new TeamReport and persists it to storage.
	//
	// POST /team-reports
	CreateTeamReport(ctx context.Context, req *CreateTeamReportReq) (CreateTeamReportRes, error)
	// DeleteApiToken implements deleteApiToken operation.
	//
	// Deletes the ApiToken with the requested ID.
	//
	// DELETE /api-tokens/{id}
	DeleteApiToken(ctx context.Context, params DeleteApiTokenParams) (DeleteApiTokenRes, error)
	// DeleteCheck implements deleteCheck operation.
	//
	// Deletes the Check with the requested ID.
	//
	// DELETE /checks/{id}
	DeleteCheck(ctx context.Context, params DeleteCheckParams) (DeleteCheckRes, error)
	// DeleteHost implements deleteHost operation.
	//
	// Deletes the Host with the requested ID.
	//
	// DELETE /hosts/{id}
	DeleteHost(ctx context.Context, params DeleteHostParams) (DeleteHostRes, error)
	// DeleteHostService implements deleteHostService operation.
	//
	// Deletes the HostService with the requested ID.
	//
	// DELETE /host-services/{id}
	DeleteHostService(ctx context.Context, params DeleteHostServiceParams) (DeleteHostServiceRes, error)
	// DeleteHostServiceReport implements deleteHostServiceReport operation.
	//
	// Deletes the HostServiceReport with the requested ID.
	//
	// DELETE /host-service-reports/{id}
	DeleteHostServiceReport(ctx context.Context, params DeleteHostServiceReportParams) (DeleteHostServiceReportRes, error)
	// DeleteProperty implements deleteProperty operation.
	//
	// Deletes the Property with the requested ID.
	//
	// DELETE /properties/{id}
	DeleteProperty(ctx context.Context, params DeletePropertyParams) (DeletePropertyRes, error)
	// DeleteRound implements deleteRound operation.
	//
	// Deletes the Round with the requested ID.
	//
	// DELETE /rounds/{id}
	DeleteRound(ctx context.Context, params DeleteRoundParams) (DeleteRoundRes, error)
	// DeleteService implements deleteService operation.
	//
	// Deletes the Service with the requested ID.
	//
	// DELETE /services/{id}
	DeleteService(ctx context.Context, params DeleteServiceParams) (DeleteServiceRes, error)
	// DeleteTeam implements deleteTeam operation.
	//
	// Deletes the Team with the requested ID.
	//
	// DELETE /teams/{id}
	DeleteTeam(ctx context.Context, params DeleteTeamParams) (DeleteTeamRes, error)
	// DeleteTeamReport implements deleteTeamReport operation.
	//
	// Deletes the TeamReport with the requested ID.
	//
	// DELETE /team-reports/{id}
	DeleteTeamReport(ctx context.Context, params DeleteTeamReportParams) (DeleteTeamReportRes, error)
	// ListApiToken implements listApiToken operation.
	//
	// List ApiTokens.
	//
	// GET /api-tokens
	ListApiToken(ctx context.Context, params ListApiTokenParams) (ListApiTokenRes, error)
	// ListCheck implements listCheck operation.
	//
	// List Checks.
	//
	// GET /checks
	ListCheck(ctx context.Context, params ListCheckParams) (ListCheckRes, error)
	// ListHost implements listHost operation.
	//
	// List Hosts.
	//
	// GET /hosts
	ListHost(ctx context.Context, params ListHostParams) (ListHostRes, error)
	// ListHostHostservices implements listHostHostservices operation.
	//
	// List attached Hostservices.
	//
	// GET /hosts/{id}/hostservices
	ListHostHostservices(ctx context.Context, params ListHostHostservicesParams) (ListHostHostservicesRes, error)
	// ListHostService implements listHostService operation.
	//
	// List HostServices.
	//
	// GET /host-services
	ListHostService(ctx context.Context, params ListHostServiceParams) (ListHostServiceRes, error)
	// ListHostServiceChecks implements listHostServiceChecks operation.
	//
	// List attached Checks.
	//
	// GET /host-services/{id}/checks
	ListHostServiceChecks(ctx context.Context, params ListHostServiceChecksParams) (ListHostServiceChecksRes, error)
	// ListHostServiceProperties implements listHostServiceProperties operation.
	//
	// List attached Properties.
	//
	// GET /host-services/{id}/properties
	ListHostServiceProperties(ctx context.Context, params ListHostServicePropertiesParams) (ListHostServicePropertiesRes, error)
	// ListHostServiceReport implements listHostServiceReport operation.
	//
	// List HostServiceReports.
	//
	// GET /host-service-reports
	ListHostServiceReport(ctx context.Context, params ListHostServiceReportParams) (ListHostServiceReportRes, error)
	// ListProperty implements listProperty operation.
	//
	// List Properties.
	//
	// GET /properties
	ListProperty(ctx context.Context, params ListPropertyParams) (ListPropertyRes, error)
	// ListRound implements listRound operation.
	//
	// List Rounds.
	//
	// GET /rounds
	ListRound(ctx context.Context, params ListRoundParams) (ListRoundRes, error)
	// ListRoundChecks implements listRoundChecks operation.
	//
	// List attached Checks.
	//
	// GET /rounds/{id}/checks
	ListRoundChecks(ctx context.Context, params ListRoundChecksParams) (ListRoundChecksRes, error)
	// ListRoundChecksLatest implements listRoundChecksLatest operation.
	//
	// List attached checks.
	//
	// GET /rounds/latest/checks
	ListRoundChecksLatest(ctx context.Context) (ListRoundChecksLatestRes, error)
	// ListService implements listService operation.
	//
	// List Services.
	//
	// GET /services
	ListService(ctx context.Context, params ListServiceParams) (ListServiceRes, error)
	// ListServiceHostservicereports implements listServiceHostservicereports operation.
	//
	// List attached Hostservicereports.
	//
	// GET /services/{id}/hostservicereports
	ListServiceHostservicereports(ctx context.Context, params ListServiceHostservicereportsParams) (ListServiceHostservicereportsRes, error)
	// ListServiceHostservices implements listServiceHostservices operation.
	//
	// List attached Hostservices.
	//
	// GET /services/{id}/hostservices
	ListServiceHostservices(ctx context.Context, params ListServiceHostservicesParams) (ListServiceHostservicesRes, error)
	// ListTeam implements listTeam operation.
	//
	// List Teams.
	//
	// GET /teams
	ListTeam(ctx context.Context, params ListTeamParams) (ListTeamRes, error)
	// ListTeamHosts implements listTeamHosts operation.
	//
	// List attached Hosts.
	//
	// GET /teams/{id}/hosts
	ListTeamHosts(ctx context.Context, params ListTeamHostsParams) (ListTeamHostsRes, error)
	// ListTeamHostservicereports implements listTeamHostservicereports operation.
	//
	// List attached Hostservicereports.
	//
	// GET /teams/{id}/hostservicereports
	ListTeamHostservicereports(ctx context.Context, params ListTeamHostservicereportsParams) (ListTeamHostservicereportsRes, error)
	// ListTeamHostservices implements listTeamHostservices operation.
	//
	// List attached Hostservices.
	//
	// GET /teams/{id}/hostservices
	ListTeamHostservices(ctx context.Context, params ListTeamHostservicesParams) (ListTeamHostservicesRes, error)
	// ListTeamReport implements listTeamReport operation.
	//
	// List TeamReports.
	//
	// GET /team-reports
	ListTeamReport(ctx context.Context, params ListTeamReportParams) (ListTeamReportRes, error)
	// ListTeamReportHostservicereports implements listTeamReportHostservicereports operation.
	//
	// List attached Hostservicereports.
	//
	// GET /team-reports/{id}/hostservicereports
	ListTeamReportHostservicereports(ctx context.Context, params ListTeamReportHostservicereportsParams) (ListTeamReportHostservicereportsRes, error)
	// ReadApiToken implements readApiToken operation.
	//
	// Finds the ApiToken with the requested ID and returns it.
	//
	// GET /api-tokens/{id}
	ReadApiToken(ctx context.Context, params ReadApiTokenParams) (ReadApiTokenRes, error)
	// ReadCheck implements readCheck operation.
	//
	// Finds the Check with the requested ID and returns it.
	//
	// GET /checks/{id}
	ReadCheck(ctx context.Context, params ReadCheckParams) (ReadCheckRes, error)
	// ReadCheckHostservice implements readCheckHostservice operation.
	//
	// Find the attached HostService of the Check with the given ID.
	//
	// GET /checks/{id}/hostservice
	ReadCheckHostservice(ctx context.Context, params ReadCheckHostserviceParams) (ReadCheckHostserviceRes, error)
	// ReadCheckRound implements readCheckRound operation.
	//
	// Find the attached Round of the Check with the given ID.
	//
	// GET /checks/{id}/round
	ReadCheckRound(ctx context.Context, params ReadCheckRoundParams) (ReadCheckRoundRes, error)
	// ReadCompetition implements readCompetition operation.
	//
	// Finds the Competition with the requested ID and returns it.
	//
	// GET /competitions/{id}
	ReadCompetition(ctx context.Context, params ReadCompetitionParams) (ReadCompetitionRes, error)
	// ReadHost implements readHost operation.
	//
	// Finds the Host with the requested ID and returns it.
	//
	// GET /hosts/{id}
	ReadHost(ctx context.Context, params ReadHostParams) (ReadHostRes, error)
	// ReadHostService implements readHostService operation.
	//
	// Finds the HostService with the requested ID and returns it.
	//
	// GET /host-services/{id}
	ReadHostService(ctx context.Context, params ReadHostServiceParams) (ReadHostServiceRes, error)
	// ReadHostServiceHost implements readHostServiceHost operation.
	//
	// Find the attached Host of the HostService with the given ID.
	//
	// GET /host-services/{id}/host
	ReadHostServiceHost(ctx context.Context, params ReadHostServiceHostParams) (ReadHostServiceHostRes, error)
	// ReadHostServiceHostservicereport implements readHostServiceHostservicereport operation.
	//
	// Find the attached HostServiceReport of the HostService with the given ID.
	//
	// GET /host-services/{id}/hostservicereport
	ReadHostServiceHostservicereport(ctx context.Context, params ReadHostServiceHostservicereportParams) (ReadHostServiceHostservicereportRes, error)
	// ReadHostServiceReport implements readHostServiceReport operation.
	//
	// Finds the HostServiceReport with the requested ID and returns it.
	//
	// GET /host-service-reports/{id}
	ReadHostServiceReport(ctx context.Context, params ReadHostServiceReportParams) (ReadHostServiceReportRes, error)
	// ReadHostServiceReportHostservice implements readHostServiceReportHostservice operation.
	//
	// Find the attached HostService of the HostServiceReport with the given ID.
	//
	// GET /host-service-reports/{id}/hostservice
	ReadHostServiceReportHostservice(ctx context.Context, params ReadHostServiceReportHostserviceParams) (ReadHostServiceReportHostserviceRes, error)
	// ReadHostServiceReportService implements readHostServiceReportService operation.
	//
	// Find the attached Service of the HostServiceReport with the given ID.
	//
	// GET /host-service-reports/{id}/service
	ReadHostServiceReportService(ctx context.Context, params ReadHostServiceReportServiceParams) (ReadHostServiceReportServiceRes, error)
	// ReadHostServiceReportTeam implements readHostServiceReportTeam operation.
	//
	// Find the attached Team of the HostServiceReport with the given ID.
	//
	// GET /host-service-reports/{id}/team
	ReadHostServiceReportTeam(ctx context.Context, params ReadHostServiceReportTeamParams) (ReadHostServiceReportTeamRes, error)
	// ReadHostServiceReportTeamreport implements readHostServiceReportTeamreport operation.
	//
	// Find the attached TeamReport of the HostServiceReport with the given ID.
	//
	// GET /host-service-reports/{id}/teamreport
	ReadHostServiceReportTeamreport(ctx context.Context, params ReadHostServiceReportTeamreportParams) (ReadHostServiceReportTeamreportRes, error)
	// ReadHostServiceService implements readHostServiceService operation.
	//
	// Find the attached Service of the HostService with the given ID.
	//
	// GET /host-services/{id}/service
	ReadHostServiceService(ctx context.Context, params ReadHostServiceServiceParams) (ReadHostServiceServiceRes, error)
	// ReadHostServiceTeam implements readHostServiceTeam operation.
	//
	// Find the attached Team of the HostService with the given ID.
	//
	// GET /host-services/{id}/team
	ReadHostServiceTeam(ctx context.Context, params ReadHostServiceTeamParams) (ReadHostServiceTeamRes, error)
	// ReadHostTeam implements readHostTeam operation.
	//
	// Find the attached Team of the Host with the given ID.
	//
	// GET /hosts/{id}/team
	ReadHostTeam(ctx context.Context, params ReadHostTeamParams) (ReadHostTeamRes, error)
	// ReadProperty implements readProperty operation.
	//
	// Finds the Property with the requested ID and returns it.
	//
	// GET /properties/{id}
	ReadProperty(ctx context.Context, params ReadPropertyParams) (ReadPropertyRes, error)
	// ReadPropertyHostservice implements readPropertyHostservice operation.
	//
	// Find the attached HostService of the Property with the given ID.
	//
	// GET /properties/{id}/hostservice
	ReadPropertyHostservice(ctx context.Context, params ReadPropertyHostserviceParams) (ReadPropertyHostserviceRes, error)
	// ReadRound implements readRound operation.
	//
	// Finds the Round with the requested ID and returns it.
	//
	// GET /rounds/{id}
	ReadRound(ctx context.Context, params ReadRoundParams) (ReadRoundRes, error)
	// ReadRoundLatest implements readRoundLatest operation.
	//
	// Get latest completed round.
	//
	// GET /rounds/latest
	ReadRoundLatest(ctx context.Context) (ReadRoundLatestRes, error)
	// ReadService implements readService operation.
	//
	// Finds the Service with the requested ID and returns it.
	//
	// GET /services/{id}
	ReadService(ctx context.Context, params ReadServiceParams) (ReadServiceRes, error)
	// ReadTeam implements readTeam operation.
	//
	// Finds the Team with the requested ID and returns it.
	//
	// GET /teams/{id}
	ReadTeam(ctx context.Context, params ReadTeamParams) (ReadTeamRes, error)
	// ReadTeamReport implements readTeamReport operation.
	//
	// Finds the TeamReport with the requested ID and returns it.
	//
	// GET /team-reports/{id}
	ReadTeamReport(ctx context.Context, params ReadTeamReportParams) (ReadTeamReportRes, error)
	// ReadTeamReportTeam implements readTeamReportTeam operation.
	//
	// Find the attached Team of the TeamReport with the given ID.
	//
	// GET /team-reports/{id}/team
	ReadTeamReportTeam(ctx context.Context, params ReadTeamReportTeamParams) (ReadTeamReportTeamRes, error)
	// ReadTeamTeamreport implements readTeamTeamreport operation.
	//
	// Find the attached TeamReport of the Team with the given ID.
	//
	// GET /teams/{id}/teamreport
	ReadTeamTeamreport(ctx context.Context, params ReadTeamTeamreportParams) (ReadTeamTeamreportRes, error)
	// UpdateApiToken implements updateApiToken operation.
	//
	// Updates a ApiToken and persists changes to storage.
	//
	// PATCH /api-tokens/{id}
	UpdateApiToken(ctx context.Context, req *UpdateApiTokenReq, params UpdateApiTokenParams) (UpdateApiTokenRes, error)
	// UpdateCheck implements updateCheck operation.
	//
	// Updates a Check and persists changes to storage.
	//
	// PATCH /checks/{id}
	UpdateCheck(ctx context.Context, req *UpdateCheckReq, params UpdateCheckParams) (UpdateCheckRes, error)
	// UpdateCompetition implements updateCompetition operation.
	//
	// Updates a Competition and persists changes to storage.
	//
	// PATCH /competitions/{id}
	UpdateCompetition(ctx context.Context, req *UpdateCompetitionReq, params UpdateCompetitionParams) (UpdateCompetitionRes, error)
	// UpdateHost implements updateHost operation.
	//
	// Updates a Host and persists changes to storage.
	//
	// PATCH /hosts/{id}
	UpdateHost(ctx context.Context, req *UpdateHostReq, params UpdateHostParams) (UpdateHostRes, error)
	// UpdateHostService implements updateHostService operation.
	//
	// Updates a HostService and persists changes to storage.
	//
	// PATCH /host-services/{id}
	UpdateHostService(ctx context.Context, req *UpdateHostServiceReq, params UpdateHostServiceParams) (UpdateHostServiceRes, error)
	// UpdateHostServiceReport implements updateHostServiceReport operation.
	//
	// Updates a HostServiceReport and persists changes to storage.
	//
	// PATCH /host-service-reports/{id}
	UpdateHostServiceReport(ctx context.Context, req *UpdateHostServiceReportReq, params UpdateHostServiceReportParams) (UpdateHostServiceReportRes, error)
	// UpdateProperty implements updateProperty operation.
	//
	// Updates a Property and persists changes to storage.
	//
	// PATCH /properties/{id}
	UpdateProperty(ctx context.Context, req *UpdatePropertyReq, params UpdatePropertyParams) (UpdatePropertyRes, error)
	// UpdateRound implements updateRound operation.
	//
	// Updates a Round and persists changes to storage.
	//
	// PATCH /rounds/{id}
	UpdateRound(ctx context.Context, req *UpdateRoundReq, params UpdateRoundParams) (UpdateRoundRes, error)
	// UpdateService implements updateService operation.
	//
	// Updates a Service and persists changes to storage.
	//
	// PATCH /services/{id}
	UpdateService(ctx context.Context, req *UpdateServiceReq, params UpdateServiceParams) (UpdateServiceRes, error)
	// UpdateTeam implements updateTeam operation.
	//
	// Updates a Team and persists changes to storage.
	//
	// PATCH /teams/{id}
	UpdateTeam(ctx context.Context, req *UpdateTeamReq, params UpdateTeamParams) (UpdateTeamRes, error)
	// UpdateTeamReport implements updateTeamReport operation.
	//
	// Updates a TeamReport and persists changes to storage.
	//
	// PATCH /team-reports/{id}
	UpdateTeamReport(ctx context.Context, req *UpdateTeamReportReq, params UpdateTeamReportParams) (UpdateTeamReportRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
