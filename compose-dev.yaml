services:
  app:
    entrypoint:
    - sleep
    - infinity
    image: docker/dev-environments-go:stable-1
    init: true
    environment:
      - HOME=/go/src/github.com/scoretrak/scoretrak
    ports:
      - 3001:3001
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
    - type: bind
      source: .
      target: /go/src/github.com/scoretrak/scoretrak
  kratos-migrate:
    image: oryd/kratos:v0.11.0
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./config/ory/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.11.0
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./config/ory/kratos
        target: /etc/config/kratos
    networks:
      - intranet
networks:
  intranet:
volumes:
  kratos-sqlite:
