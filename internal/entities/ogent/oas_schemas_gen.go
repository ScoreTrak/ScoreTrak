// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/Check_CompetitionRead
type CheckCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CheckCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CheckCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CheckCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CheckCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CheckCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CheckCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CheckCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CheckCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CheckCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CheckCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CheckCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CheckCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CheckCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CheckCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CheckCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CheckCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CheckCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CheckCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*CheckCompetitionRead) readCheckCompetitionRes() {}

// Ref: #/components/schemas/CheckCreate
type CheckCreate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *CheckCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CheckCreate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CheckCreate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *CheckCreate) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *CheckCreate) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *CheckCreate) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *CheckCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CheckCreate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CheckCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *CheckCreate) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *CheckCreate) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *CheckCreate) SetPassed(val bool) {
	s.Passed = val
}

func (*CheckCreate) createCheckRes() {}

// Ref: #/components/schemas/CheckList
type CheckList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *CheckList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CheckList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CheckList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *CheckList) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *CheckList) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *CheckList) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *CheckList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CheckList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CheckList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *CheckList) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *CheckList) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *CheckList) SetPassed(val bool) {
	s.Passed = val
}

// Ref: #/components/schemas/CheckRead
type CheckRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *CheckRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CheckRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CheckRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *CheckRead) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *CheckRead) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *CheckRead) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *CheckRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CheckRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CheckRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *CheckRead) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *CheckRead) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *CheckRead) SetPassed(val bool) {
	s.Passed = val
}

func (*CheckRead) readCheckRes() {}

// Ref: #/components/schemas/Check_RoundsRead
type CheckRoundsRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CheckRoundsRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckRoundsRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckRoundsRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckRoundsRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *CheckRoundsRead) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *CheckRoundsRead) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *CheckRoundsRead) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *CheckRoundsRead) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CheckRoundsRead) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CheckRoundsRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckRoundsRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckRoundsRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckRoundsRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *CheckRoundsRead) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *CheckRoundsRead) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *CheckRoundsRead) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CheckRoundsRead) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CheckRoundsRead) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

func (*CheckRoundsRead) readCheckRoundsRes() {}

// Ref: #/components/schemas/Check_ServicesRead
type CheckServicesRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *CheckServicesRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckServicesRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckServicesRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CheckServicesRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CheckServicesRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckServicesRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *CheckServicesRead) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *CheckServicesRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CheckServicesRead) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *CheckServicesRead) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *CheckServicesRead) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *CheckServicesRead) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *CheckServicesRead) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *CheckServicesRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckServicesRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckServicesRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CheckServicesRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CheckServicesRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckServicesRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *CheckServicesRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *CheckServicesRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CheckServicesRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *CheckServicesRead) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *CheckServicesRead) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *CheckServicesRead) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *CheckServicesRead) SetRoundDelay(val int) {
	s.RoundDelay = val
}

func (*CheckServicesRead) readCheckServicesRes() {}

// Ref: #/components/schemas/CheckUpdate
type CheckUpdate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *CheckUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CheckUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CheckUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CheckUpdate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CheckUpdate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CheckUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *CheckUpdate) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *CheckUpdate) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *CheckUpdate) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *CheckUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CheckUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CheckUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CheckUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CheckUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CheckUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *CheckUpdate) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *CheckUpdate) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *CheckUpdate) SetPassed(val bool) {
	s.Passed = val
}

func (*CheckUpdate) updateCheckRes() {}

// Ref: #/components/schemas/CompetitionCreate
type CompetitionCreate struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CompetitionCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CompetitionCreate) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CompetitionCreate) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CompetitionCreate) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CompetitionCreate) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CompetitionCreate) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CompetitionCreate) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CompetitionCreate) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CompetitionCreate) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CompetitionCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CompetitionCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CompetitionCreate) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CompetitionCreate) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CompetitionCreate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CompetitionCreate) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CompetitionCreate) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CompetitionCreate) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CompetitionCreate) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*CompetitionCreate) createCompetitionRes() {}

// Ref: #/components/schemas/CompetitionList
type CompetitionList struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CompetitionList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CompetitionList) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CompetitionList) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CompetitionList) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CompetitionList) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CompetitionList) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CompetitionList) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CompetitionList) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CompetitionList) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CompetitionList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CompetitionList) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CompetitionList) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CompetitionList) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CompetitionList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CompetitionList) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CompetitionList) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CompetitionList) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CompetitionList) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

// Ref: #/components/schemas/CompetitionRead
type CompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*CompetitionRead) readCompetitionRes() {}

// Ref: #/components/schemas/Competition_TeamsList
type CompetitionTeamsList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *CompetitionTeamsList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionTeamsList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionTeamsList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CompetitionTeamsList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CompetitionTeamsList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CompetitionTeamsList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *CompetitionTeamsList) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *CompetitionTeamsList) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *CompetitionTeamsList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionTeamsList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionTeamsList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CompetitionTeamsList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CompetitionTeamsList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CompetitionTeamsList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *CompetitionTeamsList) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *CompetitionTeamsList) SetIndex(val int) {
	s.Index = val
}

// Ref: #/components/schemas/CompetitionUpdate
type CompetitionUpdate struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *CompetitionUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CompetitionUpdate) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CompetitionUpdate) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CompetitionUpdate) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CompetitionUpdate) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CompetitionUpdate) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CompetitionUpdate) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CompetitionUpdate) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CompetitionUpdate) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *CompetitionUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CompetitionUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CompetitionUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CompetitionUpdate) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CompetitionUpdate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CompetitionUpdate) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CompetitionUpdate) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CompetitionUpdate) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CompetitionUpdate) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*CompetitionUpdate) updateCompetitionRes() {}

// Ref: #/components/schemas/Competition_UsersList
type CompetitionUsersList struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *CompetitionUsersList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *CompetitionUsersList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CompetitionUsersList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *CompetitionUsersList) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *CompetitionUsersList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *CompetitionUsersList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CompetitionUsersList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *CompetitionUsersList) SetUsername(val string) {
	s.Username = val
}

type CreateCheckReq struct {
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
	Competition   int       `json:"competition"`
	Rounds        int       `json:"rounds"`
	Services      int       `json:"services"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateCheckReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateCheckReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CreateCheckReq) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CreateCheckReq) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateCheckReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *CreateCheckReq) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *CreateCheckReq) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *CreateCheckReq) GetPassed() bool {
	return s.Passed
}

// GetCompetition returns the value of Competition.
func (s *CreateCheckReq) GetCompetition() int {
	return s.Competition
}

// GetRounds returns the value of Rounds.
func (s *CreateCheckReq) GetRounds() int {
	return s.Rounds
}

// GetServices returns the value of Services.
func (s *CreateCheckReq) GetServices() int {
	return s.Services
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateCheckReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateCheckReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CreateCheckReq) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CreateCheckReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateCheckReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *CreateCheckReq) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *CreateCheckReq) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *CreateCheckReq) SetPassed(val bool) {
	s.Passed = val
}

// SetCompetition sets the value of Competition.
func (s *CreateCheckReq) SetCompetition(val int) {
	s.Competition = val
}

// SetRounds sets the value of Rounds.
func (s *CreateCheckReq) SetRounds(val int) {
	s.Rounds = val
}

// SetServices sets the value of Services.
func (s *CreateCheckReq) SetServices(val int) {
	s.Services = val
}

type CreateCompetitionReq struct {
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
	Teams         []int       `json:"teams"`
	Users         []int       `json:"users"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateCompetitionReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateCompetitionReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *CreateCompetitionReq) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *CreateCompetitionReq) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *CreateCompetitionReq) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateCompetitionReq) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *CreateCompetitionReq) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *CreateCompetitionReq) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *CreateCompetitionReq) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CreateCompetitionReq) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// GetTeams returns the value of Teams.
func (s *CreateCompetitionReq) GetTeams() []int {
	return s.Teams
}

// GetUsers returns the value of Users.
func (s *CreateCompetitionReq) GetUsers() []int {
	return s.Users
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateCompetitionReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateCompetitionReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *CreateCompetitionReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *CreateCompetitionReq) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *CreateCompetitionReq) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateCompetitionReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *CreateCompetitionReq) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *CreateCompetitionReq) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CreateCompetitionReq) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CreateCompetitionReq) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

// SetTeams sets the value of Teams.
func (s *CreateCompetitionReq) SetTeams(val []int) {
	s.Teams = val
}

// SetUsers sets the value of Users.
func (s *CreateCompetitionReq) SetUsers(val []int) {
	s.Users = val
}

type CreateHostGroupReq struct {
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	Competition   int       `json:"competition"`
	Team          int       `json:"team"`
	Hosts         []int     `json:"hosts"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateHostGroupReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateHostGroupReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CreateHostGroupReq) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CreateHostGroupReq) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateHostGroupReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *CreateHostGroupReq) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *CreateHostGroupReq) GetName() string {
	return s.Name
}

// GetCompetition returns the value of Competition.
func (s *CreateHostGroupReq) GetCompetition() int {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *CreateHostGroupReq) GetTeam() int {
	return s.Team
}

// GetHosts returns the value of Hosts.
func (s *CreateHostGroupReq) GetHosts() []int {
	return s.Hosts
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateHostGroupReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateHostGroupReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CreateHostGroupReq) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CreateHostGroupReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateHostGroupReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *CreateHostGroupReq) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *CreateHostGroupReq) SetName(val string) {
	s.Name = val
}

// SetCompetition sets the value of Competition.
func (s *CreateHostGroupReq) SetCompetition(val int) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *CreateHostGroupReq) SetTeam(val int) {
	s.Team = val
}

// SetHosts sets the value of Hosts.
func (s *CreateHostGroupReq) SetHosts(val []int) {
	s.Hosts = val
}

type CreateHostReq struct {
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
	Competition      int       `json:"competition"`
	Team             int       `json:"team"`
	Services         []int     `json:"services"`
	HostGroup        int       `json:"host_group"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateHostReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateHostReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CreateHostReq) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CreateHostReq) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateHostReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *CreateHostReq) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *CreateHostReq) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *CreateHostReq) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *CreateHostReq) GetEditable() bool {
	return s.Editable
}

// GetCompetition returns the value of Competition.
func (s *CreateHostReq) GetCompetition() int {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *CreateHostReq) GetTeam() int {
	return s.Team
}

// GetServices returns the value of Services.
func (s *CreateHostReq) GetServices() []int {
	return s.Services
}

// GetHostGroup returns the value of HostGroup.
func (s *CreateHostReq) GetHostGroup() int {
	return s.HostGroup
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateHostReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateHostReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CreateHostReq) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CreateHostReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateHostReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *CreateHostReq) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *CreateHostReq) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *CreateHostReq) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *CreateHostReq) SetEditable(val bool) {
	s.Editable = val
}

// SetCompetition sets the value of Competition.
func (s *CreateHostReq) SetCompetition(val int) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *CreateHostReq) SetTeam(val int) {
	s.Team = val
}

// SetServices sets the value of Services.
func (s *CreateHostReq) SetServices(val []int) {
	s.Services = val
}

// SetHostGroup sets the value of HostGroup.
func (s *CreateHostReq) SetHostGroup(val int) {
	s.HostGroup = val
}

type CreatePropertyReq struct {
	CreateTime    time.Time               `json:"create_time"`
	UpdateTime    time.Time               `json:"update_time"`
	CompetitionID int                     `json:"competition_id"`
	TeamID        int                     `json:"team_id"`
	Key           string                  `json:"key"`
	Value         string                  `json:"value"`
	Status        CreatePropertyReqStatus `json:"status"`
	Competition   int                     `json:"competition"`
	Team          int                     `json:"team"`
	Services      int                     `json:"services"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreatePropertyReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreatePropertyReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreatePropertyReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *CreatePropertyReq) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *CreatePropertyReq) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *CreatePropertyReq) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *CreatePropertyReq) GetStatus() CreatePropertyReqStatus {
	return s.Status
}

// GetCompetition returns the value of Competition.
func (s *CreatePropertyReq) GetCompetition() int {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *CreatePropertyReq) GetTeam() int {
	return s.Team
}

// GetServices returns the value of Services.
func (s *CreatePropertyReq) GetServices() int {
	return s.Services
}

// SetCreateTime sets the value of CreateTime.
func (s *CreatePropertyReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreatePropertyReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreatePropertyReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *CreatePropertyReq) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *CreatePropertyReq) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *CreatePropertyReq) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *CreatePropertyReq) SetStatus(val CreatePropertyReqStatus) {
	s.Status = val
}

// SetCompetition sets the value of Competition.
func (s *CreatePropertyReq) SetCompetition(val int) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *CreatePropertyReq) SetTeam(val int) {
	s.Team = val
}

// SetServices sets the value of Services.
func (s *CreatePropertyReq) SetServices(val int) {
	s.Services = val
}

type CreatePropertyReqStatus string

const (
	CreatePropertyReqStatusView CreatePropertyReqStatus = "view"
	CreatePropertyReqStatusEdit CreatePropertyReqStatus = "edit"
	CreatePropertyReqStatusHide CreatePropertyReqStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s CreatePropertyReqStatus) MarshalText() ([]byte, error) {
	switch s {
	case CreatePropertyReqStatusView:
		return []byte(s), nil
	case CreatePropertyReqStatusEdit:
		return []byte(s), nil
	case CreatePropertyReqStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CreatePropertyReqStatus) UnmarshalText(data []byte) error {
	switch CreatePropertyReqStatus(data) {
	case CreatePropertyReqStatusView:
		*s = CreatePropertyReqStatusView
		return nil
	case CreatePropertyReqStatusEdit:
		*s = CreatePropertyReqStatusEdit
		return nil
	case CreatePropertyReqStatusHide:
		*s = CreatePropertyReqStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CreateRoundReq struct {
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
	Competition   int       `json:"competition"`
	Checks        []int     `json:"checks"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateRoundReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateRoundReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateRoundReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *CreateRoundReq) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *CreateRoundReq) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *CreateRoundReq) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *CreateRoundReq) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *CreateRoundReq) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// GetCompetition returns the value of Competition.
func (s *CreateRoundReq) GetCompetition() int {
	return s.Competition
}

// GetChecks returns the value of Checks.
func (s *CreateRoundReq) GetChecks() []int {
	return s.Checks
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateRoundReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateRoundReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateRoundReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *CreateRoundReq) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *CreateRoundReq) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *CreateRoundReq) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *CreateRoundReq) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *CreateRoundReq) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

// SetCompetition sets the value of Competition.
func (s *CreateRoundReq) SetCompetition(val int) {
	s.Competition = val
}

// SetChecks sets the value of Checks.
func (s *CreateRoundReq) SetChecks(val []int) {
	s.Checks = val
}

type CreateServiceReq struct {
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
	Competition   int       `json:"competition"`
	Team          int       `json:"team"`
	Hosts         OptInt    `json:"hosts"`
	Checks        []int     `json:"checks"`
	Properties    []int     `json:"properties"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateServiceReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateServiceReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CreateServiceReq) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CreateServiceReq) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateServiceReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *CreateServiceReq) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *CreateServiceReq) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateServiceReq) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *CreateServiceReq) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *CreateServiceReq) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *CreateServiceReq) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *CreateServiceReq) GetRoundDelay() int {
	return s.RoundDelay
}

// GetCompetition returns the value of Competition.
func (s *CreateServiceReq) GetCompetition() int {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *CreateServiceReq) GetTeam() int {
	return s.Team
}

// GetHosts returns the value of Hosts.
func (s *CreateServiceReq) GetHosts() OptInt {
	return s.Hosts
}

// GetChecks returns the value of Checks.
func (s *CreateServiceReq) GetChecks() []int {
	return s.Checks
}

// GetProperties returns the value of Properties.
func (s *CreateServiceReq) GetProperties() []int {
	return s.Properties
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateServiceReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateServiceReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CreateServiceReq) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CreateServiceReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateServiceReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *CreateServiceReq) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *CreateServiceReq) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateServiceReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *CreateServiceReq) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *CreateServiceReq) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *CreateServiceReq) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *CreateServiceReq) SetRoundDelay(val int) {
	s.RoundDelay = val
}

// SetCompetition sets the value of Competition.
func (s *CreateServiceReq) SetCompetition(val int) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *CreateServiceReq) SetTeam(val int) {
	s.Team = val
}

// SetHosts sets the value of Hosts.
func (s *CreateServiceReq) SetHosts(val OptInt) {
	s.Hosts = val
}

// SetChecks sets the value of Checks.
func (s *CreateServiceReq) SetChecks(val []int) {
	s.Checks = val
}

// SetProperties sets the value of Properties.
func (s *CreateServiceReq) SetProperties(val []int) {
	s.Properties = val
}

type CreateTeamReq struct {
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
	Competition   int       `json:"competition"`
	Users         []int     `json:"users"`
	Hosts         []int     `json:"hosts"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateTeamReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateTeamReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *CreateTeamReq) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *CreateTeamReq) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *CreateTeamReq) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *CreateTeamReq) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *CreateTeamReq) GetIndex() int {
	return s.Index
}

// GetCompetition returns the value of Competition.
func (s *CreateTeamReq) GetCompetition() int {
	return s.Competition
}

// GetUsers returns the value of Users.
func (s *CreateTeamReq) GetUsers() []int {
	return s.Users
}

// GetHosts returns the value of Hosts.
func (s *CreateTeamReq) GetHosts() []int {
	return s.Hosts
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateTeamReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateTeamReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *CreateTeamReq) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *CreateTeamReq) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *CreateTeamReq) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *CreateTeamReq) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *CreateTeamReq) SetIndex(val int) {
	s.Index = val
}

// SetCompetition sets the value of Competition.
func (s *CreateTeamReq) SetCompetition(val int) {
	s.Competition = val
}

// SetUsers sets the value of Users.
func (s *CreateTeamReq) SetUsers(val []int) {
	s.Users = val
}

// SetHosts sets the value of Hosts.
func (s *CreateTeamReq) SetHosts(val []int) {
	s.Hosts = val
}

type CreateUserReq struct {
	CreateTime   time.Time `json:"create_time"`
	UpdateTime   time.Time `json:"update_time"`
	Username     string    `json:"username"`
	Teams        []int     `json:"teams"`
	Competitions []int     `json:"competitions"`
}

// GetCreateTime returns the value of CreateTime.
func (s *CreateUserReq) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *CreateUserReq) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *CreateUserReq) GetUsername() string {
	return s.Username
}

// GetTeams returns the value of Teams.
func (s *CreateUserReq) GetTeams() []int {
	return s.Teams
}

// GetCompetitions returns the value of Competitions.
func (s *CreateUserReq) GetCompetitions() []int {
	return s.Competitions
}

// SetCreateTime sets the value of CreateTime.
func (s *CreateUserReq) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *CreateUserReq) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *CreateUserReq) SetUsername(val string) {
	s.Username = val
}

// SetTeams sets the value of Teams.
func (s *CreateUserReq) SetTeams(val []int) {
	s.Teams = val
}

// SetCompetitions sets the value of Competitions.
func (s *CreateUserReq) SetCompetitions(val []int) {
	s.Competitions = val
}

// DeleteCheckNoContent is response for DeleteCheck operation.
type DeleteCheckNoContent struct{}

func (*DeleteCheckNoContent) deleteCheckRes() {}

// DeleteCompetitionNoContent is response for DeleteCompetition operation.
type DeleteCompetitionNoContent struct{}

func (*DeleteCompetitionNoContent) deleteCompetitionRes() {}

// DeleteHostGroupNoContent is response for DeleteHostGroup operation.
type DeleteHostGroupNoContent struct{}

func (*DeleteHostGroupNoContent) deleteHostGroupRes() {}

// DeleteHostNoContent is response for DeleteHost operation.
type DeleteHostNoContent struct{}

func (*DeleteHostNoContent) deleteHostRes() {}

// DeletePropertyNoContent is response for DeleteProperty operation.
type DeletePropertyNoContent struct{}

func (*DeletePropertyNoContent) deletePropertyRes() {}

// DeleteRoundNoContent is response for DeleteRound operation.
type DeleteRoundNoContent struct{}

func (*DeleteRoundNoContent) deleteRoundRes() {}

// DeleteServiceNoContent is response for DeleteService operation.
type DeleteServiceNoContent struct{}

func (*DeleteServiceNoContent) deleteServiceRes() {}

// DeleteTeamNoContent is response for DeleteTeam operation.
type DeleteTeamNoContent struct{}

func (*DeleteTeamNoContent) deleteTeamRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/Host_CompetitionRead
type HostCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *HostCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *HostCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *HostCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *HostCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *HostCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *HostCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *HostCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *HostCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *HostCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *HostCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *HostCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *HostCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *HostCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *HostCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *HostCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *HostCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *HostCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *HostCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*HostCompetitionRead) readHostCompetitionRes() {}

// Ref: #/components/schemas/HostCreate
type HostCreate struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *HostCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostCreate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostCreate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostCreate) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *HostCreate) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *HostCreate) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *HostCreate) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *HostCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostCreate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostCreate) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *HostCreate) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *HostCreate) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *HostCreate) SetEditable(val bool) {
	s.Editable = val
}

func (*HostCreate) createHostRes() {}

// Ref: #/components/schemas/HostGroup_CompetitionRead
type HostGroupCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *HostGroupCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *HostGroupCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *HostGroupCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *HostGroupCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *HostGroupCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *HostGroupCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *HostGroupCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *HostGroupCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *HostGroupCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *HostGroupCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *HostGroupCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *HostGroupCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *HostGroupCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *HostGroupCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *HostGroupCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *HostGroupCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *HostGroupCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*HostGroupCompetitionRead) readHostGroupCompetitionRes() {}

// Ref: #/components/schemas/HostGroupCreate
type HostGroupCreate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
}

// GetID returns the value of ID.
func (s *HostGroupCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupCreate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupCreate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostGroupCreate) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostGroupCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *HostGroupCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupCreate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostGroupCreate) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostGroupCreate) SetName(val string) {
	s.Name = val
}

func (*HostGroupCreate) createHostGroupRes() {}

// Ref: #/components/schemas/HostGroup_HostsList
type HostGroupHostsList struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *HostGroupHostsList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupHostsList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupHostsList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupHostsList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupHostsList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupHostsList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostGroupHostsList) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *HostGroupHostsList) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *HostGroupHostsList) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *HostGroupHostsList) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *HostGroupHostsList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupHostsList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupHostsList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupHostsList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupHostsList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupHostsList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostGroupHostsList) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *HostGroupHostsList) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *HostGroupHostsList) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *HostGroupHostsList) SetEditable(val bool) {
	s.Editable = val
}

// Ref: #/components/schemas/HostGroupList
type HostGroupList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
}

// GetID returns the value of ID.
func (s *HostGroupList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostGroupList) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostGroupList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *HostGroupList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostGroupList) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostGroupList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/HostGroupRead
type HostGroupRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
}

// GetID returns the value of ID.
func (s *HostGroupRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostGroupRead) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostGroupRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *HostGroupRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostGroupRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostGroupRead) SetName(val string) {
	s.Name = val
}

func (*HostGroupRead) readHostGroupRes() {}

// Ref: #/components/schemas/HostGroup_TeamRead
type HostGroupTeamRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *HostGroupTeamRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupTeamRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupTeamRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupTeamRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupTeamRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupTeamRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *HostGroupTeamRead) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *HostGroupTeamRead) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *HostGroupTeamRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupTeamRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupTeamRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupTeamRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupTeamRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupTeamRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *HostGroupTeamRead) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *HostGroupTeamRead) SetIndex(val int) {
	s.Index = val
}

func (*HostGroupTeamRead) readHostGroupTeamRes() {}

// Ref: #/components/schemas/HostGroupUpdate
type HostGroupUpdate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
}

// GetID returns the value of ID.
func (s *HostGroupUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostGroupUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostGroupUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostGroupUpdate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostGroupUpdate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostGroupUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostGroupUpdate) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostGroupUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *HostGroupUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostGroupUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostGroupUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostGroupUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostGroupUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostGroupUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostGroupUpdate) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostGroupUpdate) SetName(val string) {
	s.Name = val
}

func (*HostGroupUpdate) updateHostGroupRes() {}

// Ref: #/components/schemas/Host_HostGroupRead
type HostHostGroupRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
}

// GetID returns the value of ID.
func (s *HostHostGroupRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostHostGroupRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostHostGroupRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostHostGroupRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostHostGroupRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostHostGroupRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostHostGroupRead) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostHostGroupRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *HostHostGroupRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostHostGroupRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostHostGroupRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostHostGroupRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostHostGroupRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostHostGroupRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostHostGroupRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostHostGroupRead) SetName(val string) {
	s.Name = val
}

func (*HostHostGroupRead) readHostHostGroupRes() {}

// Ref: #/components/schemas/HostList
type HostList struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *HostList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostList) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *HostList) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *HostList) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *HostList) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *HostList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostList) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *HostList) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *HostList) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *HostList) SetEditable(val bool) {
	s.Editable = val
}

// Ref: #/components/schemas/HostRead
type HostRead struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *HostRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostRead) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *HostRead) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *HostRead) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *HostRead) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *HostRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *HostRead) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *HostRead) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *HostRead) SetEditable(val bool) {
	s.Editable = val
}

func (*HostRead) readHostRes() {}

// Ref: #/components/schemas/Host_ServicesList
type HostServicesList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *HostServicesList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostServicesList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostServicesList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostServicesList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostServicesList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostServicesList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostServicesList) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *HostServicesList) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *HostServicesList) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *HostServicesList) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *HostServicesList) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *HostServicesList) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *HostServicesList) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *HostServicesList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostServicesList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostServicesList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostServicesList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostServicesList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostServicesList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostServicesList) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *HostServicesList) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *HostServicesList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *HostServicesList) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *HostServicesList) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *HostServicesList) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *HostServicesList) SetRoundDelay(val int) {
	s.RoundDelay = val
}

// Ref: #/components/schemas/Host_TeamRead
type HostTeamRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *HostTeamRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostTeamRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostTeamRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostTeamRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostTeamRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostTeamRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *HostTeamRead) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *HostTeamRead) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *HostTeamRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostTeamRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostTeamRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostTeamRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostTeamRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostTeamRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *HostTeamRead) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *HostTeamRead) SetIndex(val int) {
	s.Index = val
}

func (*HostTeamRead) readHostTeamRes() {}

// Ref: #/components/schemas/HostUpdate
type HostUpdate struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *HostUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *HostUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *HostUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *HostUpdate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *HostUpdate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *HostUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *HostUpdate) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *HostUpdate) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *HostUpdate) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *HostUpdate) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *HostUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *HostUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *HostUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *HostUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *HostUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *HostUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *HostUpdate) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *HostUpdate) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *HostUpdate) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *HostUpdate) SetEditable(val bool) {
	s.Editable = val
}

func (*HostUpdate) updateHostRes() {}

type ListCheckOKApplicationJSON []CheckList

func (*ListCheckOKApplicationJSON) listCheckRes() {}

type ListCompetitionOKApplicationJSON []CompetitionList

func (*ListCompetitionOKApplicationJSON) listCompetitionRes() {}

type ListCompetitionTeamsOKApplicationJSON []CompetitionTeamsList

func (*ListCompetitionTeamsOKApplicationJSON) listCompetitionTeamsRes() {}

type ListCompetitionUsersOKApplicationJSON []CompetitionUsersList

func (*ListCompetitionUsersOKApplicationJSON) listCompetitionUsersRes() {}

type ListHostGroupHostsOKApplicationJSON []HostGroupHostsList

func (*ListHostGroupHostsOKApplicationJSON) listHostGroupHostsRes() {}

type ListHostGroupOKApplicationJSON []HostGroupList

func (*ListHostGroupOKApplicationJSON) listHostGroupRes() {}

type ListHostOKApplicationJSON []HostList

func (*ListHostOKApplicationJSON) listHostRes() {}

type ListHostServicesOKApplicationJSON []HostServicesList

func (*ListHostServicesOKApplicationJSON) listHostServicesRes() {}

type ListPropertyOKApplicationJSON []PropertyList

func (*ListPropertyOKApplicationJSON) listPropertyRes() {}

type ListRoundChecksOKApplicationJSON []RoundChecksList

func (*ListRoundChecksOKApplicationJSON) listRoundChecksRes() {}

type ListRoundOKApplicationJSON []RoundList

func (*ListRoundOKApplicationJSON) listRoundRes() {}

type ListServiceChecksOKApplicationJSON []ServiceChecksList

func (*ListServiceChecksOKApplicationJSON) listServiceChecksRes() {}

type ListServiceOKApplicationJSON []ServiceList

func (*ListServiceOKApplicationJSON) listServiceRes() {}

type ListServicePropertiesOKApplicationJSON []ServicePropertiesList

func (*ListServicePropertiesOKApplicationJSON) listServicePropertiesRes() {}

type ListTeamHostsOKApplicationJSON []TeamHostsList

func (*ListTeamHostsOKApplicationJSON) listTeamHostsRes() {}

type ListTeamOKApplicationJSON []TeamList

func (*ListTeamOKApplicationJSON) listTeamRes() {}

type ListTeamUsersOKApplicationJSON []TeamUsersList

func (*ListTeamUsersOKApplicationJSON) listTeamUsersRes() {}

type ListUserCompetitionsOKApplicationJSON []UserCompetitionsList

func (*ListUserCompetitionsOKApplicationJSON) listUserCompetitionsRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

type ListUserTeamsOKApplicationJSON []UserTeamsList

func (*ListUserTeamsOKApplicationJSON) listUserTeamsRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePropertyReqStatus returns new OptUpdatePropertyReqStatus with value set to v.
func NewOptUpdatePropertyReqStatus(v UpdatePropertyReqStatus) OptUpdatePropertyReqStatus {
	return OptUpdatePropertyReqStatus{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePropertyReqStatus is optional UpdatePropertyReqStatus.
type OptUpdatePropertyReqStatus struct {
	Value UpdatePropertyReqStatus
	Set   bool
}

// IsSet returns true if OptUpdatePropertyReqStatus was set.
func (o OptUpdatePropertyReqStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePropertyReqStatus) Reset() {
	var v UpdatePropertyReqStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePropertyReqStatus) SetTo(v UpdatePropertyReqStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePropertyReqStatus) Get() (v UpdatePropertyReqStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePropertyReqStatus) Or(d UpdatePropertyReqStatus) UpdatePropertyReqStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Property_CompetitionRead
type PropertyCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *PropertyCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *PropertyCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *PropertyCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *PropertyCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *PropertyCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *PropertyCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *PropertyCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *PropertyCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *PropertyCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *PropertyCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *PropertyCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *PropertyCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *PropertyCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *PropertyCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *PropertyCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *PropertyCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *PropertyCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *PropertyCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*PropertyCompetitionRead) readPropertyCompetitionRes() {}

// Ref: #/components/schemas/PropertyCreate
type PropertyCreate struct {
	ID            int                  `json:"id"`
	CreateTime    time.Time            `json:"create_time"`
	UpdateTime    time.Time            `json:"update_time"`
	CompetitionID int                  `json:"competition_id"`
	TeamID        int                  `json:"team_id"`
	Key           string               `json:"key"`
	Value         string               `json:"value"`
	Status        PropertyCreateStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *PropertyCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *PropertyCreate) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *PropertyCreate) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PropertyCreate) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *PropertyCreate) GetStatus() PropertyCreateStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *PropertyCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *PropertyCreate) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *PropertyCreate) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PropertyCreate) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *PropertyCreate) SetStatus(val PropertyCreateStatus) {
	s.Status = val
}

func (*PropertyCreate) createPropertyRes() {}

type PropertyCreateStatus string

const (
	PropertyCreateStatusView PropertyCreateStatus = "view"
	PropertyCreateStatusEdit PropertyCreateStatus = "edit"
	PropertyCreateStatusHide PropertyCreateStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s PropertyCreateStatus) MarshalText() ([]byte, error) {
	switch s {
	case PropertyCreateStatusView:
		return []byte(s), nil
	case PropertyCreateStatusEdit:
		return []byte(s), nil
	case PropertyCreateStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertyCreateStatus) UnmarshalText(data []byte) error {
	switch PropertyCreateStatus(data) {
	case PropertyCreateStatusView:
		*s = PropertyCreateStatusView
		return nil
	case PropertyCreateStatusEdit:
		*s = PropertyCreateStatusEdit
		return nil
	case PropertyCreateStatusHide:
		*s = PropertyCreateStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PropertyList
type PropertyList struct {
	ID            int                `json:"id"`
	CreateTime    time.Time          `json:"create_time"`
	UpdateTime    time.Time          `json:"update_time"`
	CompetitionID int                `json:"competition_id"`
	TeamID        int                `json:"team_id"`
	Key           string             `json:"key"`
	Value         string             `json:"value"`
	Status        PropertyListStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *PropertyList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *PropertyList) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *PropertyList) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PropertyList) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *PropertyList) GetStatus() PropertyListStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *PropertyList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *PropertyList) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *PropertyList) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PropertyList) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *PropertyList) SetStatus(val PropertyListStatus) {
	s.Status = val
}

type PropertyListStatus string

const (
	PropertyListStatusView PropertyListStatus = "view"
	PropertyListStatusEdit PropertyListStatus = "edit"
	PropertyListStatusHide PropertyListStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s PropertyListStatus) MarshalText() ([]byte, error) {
	switch s {
	case PropertyListStatusView:
		return []byte(s), nil
	case PropertyListStatusEdit:
		return []byte(s), nil
	case PropertyListStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertyListStatus) UnmarshalText(data []byte) error {
	switch PropertyListStatus(data) {
	case PropertyListStatusView:
		*s = PropertyListStatusView
		return nil
	case PropertyListStatusEdit:
		*s = PropertyListStatusEdit
		return nil
	case PropertyListStatusHide:
		*s = PropertyListStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PropertyRead
type PropertyRead struct {
	ID            int                `json:"id"`
	CreateTime    time.Time          `json:"create_time"`
	UpdateTime    time.Time          `json:"update_time"`
	CompetitionID int                `json:"competition_id"`
	TeamID        int                `json:"team_id"`
	Key           string             `json:"key"`
	Value         string             `json:"value"`
	Status        PropertyReadStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *PropertyRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *PropertyRead) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *PropertyRead) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PropertyRead) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *PropertyRead) GetStatus() PropertyReadStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *PropertyRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *PropertyRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *PropertyRead) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PropertyRead) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *PropertyRead) SetStatus(val PropertyReadStatus) {
	s.Status = val
}

func (*PropertyRead) readPropertyRes() {}

type PropertyReadStatus string

const (
	PropertyReadStatusView PropertyReadStatus = "view"
	PropertyReadStatusEdit PropertyReadStatus = "edit"
	PropertyReadStatusHide PropertyReadStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s PropertyReadStatus) MarshalText() ([]byte, error) {
	switch s {
	case PropertyReadStatusView:
		return []byte(s), nil
	case PropertyReadStatusEdit:
		return []byte(s), nil
	case PropertyReadStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertyReadStatus) UnmarshalText(data []byte) error {
	switch PropertyReadStatus(data) {
	case PropertyReadStatusView:
		*s = PropertyReadStatusView
		return nil
	case PropertyReadStatusEdit:
		*s = PropertyReadStatusEdit
		return nil
	case PropertyReadStatusHide:
		*s = PropertyReadStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/Property_ServicesRead
type PropertyServicesRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *PropertyServicesRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyServicesRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyServicesRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *PropertyServicesRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *PropertyServicesRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyServicesRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *PropertyServicesRead) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *PropertyServicesRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *PropertyServicesRead) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *PropertyServicesRead) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *PropertyServicesRead) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *PropertyServicesRead) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *PropertyServicesRead) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *PropertyServicesRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyServicesRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyServicesRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *PropertyServicesRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *PropertyServicesRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyServicesRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *PropertyServicesRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *PropertyServicesRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *PropertyServicesRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *PropertyServicesRead) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *PropertyServicesRead) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *PropertyServicesRead) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *PropertyServicesRead) SetRoundDelay(val int) {
	s.RoundDelay = val
}

func (*PropertyServicesRead) readPropertyServicesRes() {}

// Ref: #/components/schemas/Property_TeamRead
type PropertyTeamRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *PropertyTeamRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyTeamRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyTeamRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *PropertyTeamRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *PropertyTeamRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyTeamRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *PropertyTeamRead) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *PropertyTeamRead) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *PropertyTeamRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyTeamRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyTeamRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *PropertyTeamRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *PropertyTeamRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyTeamRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *PropertyTeamRead) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *PropertyTeamRead) SetIndex(val int) {
	s.Index = val
}

func (*PropertyTeamRead) readPropertyTeamRes() {}

// Ref: #/components/schemas/PropertyUpdate
type PropertyUpdate struct {
	ID            int                  `json:"id"`
	CreateTime    time.Time            `json:"create_time"`
	UpdateTime    time.Time            `json:"update_time"`
	CompetitionID int                  `json:"competition_id"`
	TeamID        int                  `json:"team_id"`
	Key           string               `json:"key"`
	Value         string               `json:"value"`
	Status        PropertyUpdateStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *PropertyUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *PropertyUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *PropertyUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *PropertyUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *PropertyUpdate) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *PropertyUpdate) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PropertyUpdate) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *PropertyUpdate) GetStatus() PropertyUpdateStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *PropertyUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *PropertyUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *PropertyUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *PropertyUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *PropertyUpdate) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *PropertyUpdate) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PropertyUpdate) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *PropertyUpdate) SetStatus(val PropertyUpdateStatus) {
	s.Status = val
}

func (*PropertyUpdate) updatePropertyRes() {}

type PropertyUpdateStatus string

const (
	PropertyUpdateStatusView PropertyUpdateStatus = "view"
	PropertyUpdateStatusEdit PropertyUpdateStatus = "edit"
	PropertyUpdateStatusHide PropertyUpdateStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s PropertyUpdateStatus) MarshalText() ([]byte, error) {
	switch s {
	case PropertyUpdateStatusView:
		return []byte(s), nil
	case PropertyUpdateStatusEdit:
		return []byte(s), nil
	case PropertyUpdateStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PropertyUpdateStatus) UnmarshalText(data []byte) error {
	switch PropertyUpdateStatus(data) {
	case PropertyUpdateStatusView:
		*s = PropertyUpdateStatusView
		return nil
	case PropertyUpdateStatusEdit:
		*s = PropertyUpdateStatusEdit
		return nil
	case PropertyUpdateStatusHide:
		*s = PropertyUpdateStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createCheckRes()              {}
func (*R400) createCompetitionRes()        {}
func (*R400) createHostGroupRes()          {}
func (*R400) createHostRes()               {}
func (*R400) createPropertyRes()           {}
func (*R400) createRoundRes()              {}
func (*R400) createServiceRes()            {}
func (*R400) createTeamRes()               {}
func (*R400) createUserRes()               {}
func (*R400) deleteCheckRes()              {}
func (*R400) deleteCompetitionRes()        {}
func (*R400) deleteHostGroupRes()          {}
func (*R400) deleteHostRes()               {}
func (*R400) deletePropertyRes()           {}
func (*R400) deleteRoundRes()              {}
func (*R400) deleteServiceRes()            {}
func (*R400) deleteTeamRes()               {}
func (*R400) deleteUserRes()               {}
func (*R400) listCheckRes()                {}
func (*R400) listCompetitionRes()          {}
func (*R400) listCompetitionTeamsRes()     {}
func (*R400) listCompetitionUsersRes()     {}
func (*R400) listHostGroupHostsRes()       {}
func (*R400) listHostGroupRes()            {}
func (*R400) listHostRes()                 {}
func (*R400) listHostServicesRes()         {}
func (*R400) listPropertyRes()             {}
func (*R400) listRoundChecksRes()          {}
func (*R400) listRoundRes()                {}
func (*R400) listServiceChecksRes()        {}
func (*R400) listServicePropertiesRes()    {}
func (*R400) listServiceRes()              {}
func (*R400) listTeamHostsRes()            {}
func (*R400) listTeamRes()                 {}
func (*R400) listTeamUsersRes()            {}
func (*R400) listUserCompetitionsRes()     {}
func (*R400) listUserRes()                 {}
func (*R400) listUserTeamsRes()            {}
func (*R400) readCheckCompetitionRes()     {}
func (*R400) readCheckRes()                {}
func (*R400) readCheckRoundsRes()          {}
func (*R400) readCheckServicesRes()        {}
func (*R400) readCompetitionRes()          {}
func (*R400) readHostCompetitionRes()      {}
func (*R400) readHostGroupCompetitionRes() {}
func (*R400) readHostGroupRes()            {}
func (*R400) readHostGroupTeamRes()        {}
func (*R400) readHostHostGroupRes()        {}
func (*R400) readHostRes()                 {}
func (*R400) readHostTeamRes()             {}
func (*R400) readPropertyCompetitionRes()  {}
func (*R400) readPropertyRes()             {}
func (*R400) readPropertyServicesRes()     {}
func (*R400) readPropertyTeamRes()         {}
func (*R400) readRoundCompetitionRes()     {}
func (*R400) readRoundRes()                {}
func (*R400) readServiceCompetitionRes()   {}
func (*R400) readServiceHostsRes()         {}
func (*R400) readServiceRes()              {}
func (*R400) readServiceTeamRes()          {}
func (*R400) readTeamCompetitionRes()      {}
func (*R400) readTeamRes()                 {}
func (*R400) readUserRes()                 {}
func (*R400) updateCheckRes()              {}
func (*R400) updateCompetitionRes()        {}
func (*R400) updateHostGroupRes()          {}
func (*R400) updateHostRes()               {}
func (*R400) updatePropertyRes()           {}
func (*R400) updateRoundRes()              {}
func (*R400) updateServiceRes()            {}
func (*R400) updateTeamRes()               {}
func (*R400) updateUserRes()               {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteCheckRes()              {}
func (*R404) deleteCompetitionRes()        {}
func (*R404) deleteHostGroupRes()          {}
func (*R404) deleteHostRes()               {}
func (*R404) deletePropertyRes()           {}
func (*R404) deleteRoundRes()              {}
func (*R404) deleteServiceRes()            {}
func (*R404) deleteTeamRes()               {}
func (*R404) deleteUserRes()               {}
func (*R404) listCheckRes()                {}
func (*R404) listCompetitionRes()          {}
func (*R404) listCompetitionTeamsRes()     {}
func (*R404) listCompetitionUsersRes()     {}
func (*R404) listHostGroupHostsRes()       {}
func (*R404) listHostGroupRes()            {}
func (*R404) listHostRes()                 {}
func (*R404) listHostServicesRes()         {}
func (*R404) listPropertyRes()             {}
func (*R404) listRoundChecksRes()          {}
func (*R404) listRoundRes()                {}
func (*R404) listServiceChecksRes()        {}
func (*R404) listServicePropertiesRes()    {}
func (*R404) listServiceRes()              {}
func (*R404) listTeamHostsRes()            {}
func (*R404) listTeamRes()                 {}
func (*R404) listTeamUsersRes()            {}
func (*R404) listUserCompetitionsRes()     {}
func (*R404) listUserRes()                 {}
func (*R404) listUserTeamsRes()            {}
func (*R404) readCheckCompetitionRes()     {}
func (*R404) readCheckRes()                {}
func (*R404) readCheckRoundsRes()          {}
func (*R404) readCheckServicesRes()        {}
func (*R404) readCompetitionRes()          {}
func (*R404) readHostCompetitionRes()      {}
func (*R404) readHostGroupCompetitionRes() {}
func (*R404) readHostGroupRes()            {}
func (*R404) readHostGroupTeamRes()        {}
func (*R404) readHostHostGroupRes()        {}
func (*R404) readHostRes()                 {}
func (*R404) readHostTeamRes()             {}
func (*R404) readPropertyCompetitionRes()  {}
func (*R404) readPropertyRes()             {}
func (*R404) readPropertyServicesRes()     {}
func (*R404) readPropertyTeamRes()         {}
func (*R404) readRoundCompetitionRes()     {}
func (*R404) readRoundRes()                {}
func (*R404) readServiceCompetitionRes()   {}
func (*R404) readServiceHostsRes()         {}
func (*R404) readServiceRes()              {}
func (*R404) readServiceTeamRes()          {}
func (*R404) readTeamCompetitionRes()      {}
func (*R404) readTeamRes()                 {}
func (*R404) readUserRes()                 {}
func (*R404) updateCheckRes()              {}
func (*R404) updateCompetitionRes()        {}
func (*R404) updateHostGroupRes()          {}
func (*R404) updateHostRes()               {}
func (*R404) updatePropertyRes()           {}
func (*R404) updateRoundRes()              {}
func (*R404) updateServiceRes()            {}
func (*R404) updateTeamRes()               {}
func (*R404) updateUserRes()               {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createCheckRes()              {}
func (*R409) createCompetitionRes()        {}
func (*R409) createHostGroupRes()          {}
func (*R409) createHostRes()               {}
func (*R409) createPropertyRes()           {}
func (*R409) createRoundRes()              {}
func (*R409) createServiceRes()            {}
func (*R409) createTeamRes()               {}
func (*R409) createUserRes()               {}
func (*R409) deleteCheckRes()              {}
func (*R409) deleteCompetitionRes()        {}
func (*R409) deleteHostGroupRes()          {}
func (*R409) deleteHostRes()               {}
func (*R409) deletePropertyRes()           {}
func (*R409) deleteRoundRes()              {}
func (*R409) deleteServiceRes()            {}
func (*R409) deleteTeamRes()               {}
func (*R409) deleteUserRes()               {}
func (*R409) listCheckRes()                {}
func (*R409) listCompetitionRes()          {}
func (*R409) listCompetitionTeamsRes()     {}
func (*R409) listCompetitionUsersRes()     {}
func (*R409) listHostGroupHostsRes()       {}
func (*R409) listHostGroupRes()            {}
func (*R409) listHostRes()                 {}
func (*R409) listHostServicesRes()         {}
func (*R409) listPropertyRes()             {}
func (*R409) listRoundChecksRes()          {}
func (*R409) listRoundRes()                {}
func (*R409) listServiceChecksRes()        {}
func (*R409) listServicePropertiesRes()    {}
func (*R409) listServiceRes()              {}
func (*R409) listTeamHostsRes()            {}
func (*R409) listTeamRes()                 {}
func (*R409) listTeamUsersRes()            {}
func (*R409) listUserCompetitionsRes()     {}
func (*R409) listUserRes()                 {}
func (*R409) listUserTeamsRes()            {}
func (*R409) readCheckCompetitionRes()     {}
func (*R409) readCheckRes()                {}
func (*R409) readCheckRoundsRes()          {}
func (*R409) readCheckServicesRes()        {}
func (*R409) readCompetitionRes()          {}
func (*R409) readHostCompetitionRes()      {}
func (*R409) readHostGroupCompetitionRes() {}
func (*R409) readHostGroupRes()            {}
func (*R409) readHostGroupTeamRes()        {}
func (*R409) readHostHostGroupRes()        {}
func (*R409) readHostRes()                 {}
func (*R409) readHostTeamRes()             {}
func (*R409) readPropertyCompetitionRes()  {}
func (*R409) readPropertyRes()             {}
func (*R409) readPropertyServicesRes()     {}
func (*R409) readPropertyTeamRes()         {}
func (*R409) readRoundCompetitionRes()     {}
func (*R409) readRoundRes()                {}
func (*R409) readServiceCompetitionRes()   {}
func (*R409) readServiceHostsRes()         {}
func (*R409) readServiceRes()              {}
func (*R409) readServiceTeamRes()          {}
func (*R409) readTeamCompetitionRes()      {}
func (*R409) readTeamRes()                 {}
func (*R409) readUserRes()                 {}
func (*R409) updateCheckRes()              {}
func (*R409) updateCompetitionRes()        {}
func (*R409) updateHostGroupRes()          {}
func (*R409) updateHostRes()               {}
func (*R409) updatePropertyRes()           {}
func (*R409) updateRoundRes()              {}
func (*R409) updateServiceRes()            {}
func (*R409) updateTeamRes()               {}
func (*R409) updateUserRes()               {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createCheckRes()              {}
func (*R500) createCompetitionRes()        {}
func (*R500) createHostGroupRes()          {}
func (*R500) createHostRes()               {}
func (*R500) createPropertyRes()           {}
func (*R500) createRoundRes()              {}
func (*R500) createServiceRes()            {}
func (*R500) createTeamRes()               {}
func (*R500) createUserRes()               {}
func (*R500) deleteCheckRes()              {}
func (*R500) deleteCompetitionRes()        {}
func (*R500) deleteHostGroupRes()          {}
func (*R500) deleteHostRes()               {}
func (*R500) deletePropertyRes()           {}
func (*R500) deleteRoundRes()              {}
func (*R500) deleteServiceRes()            {}
func (*R500) deleteTeamRes()               {}
func (*R500) deleteUserRes()               {}
func (*R500) listCheckRes()                {}
func (*R500) listCompetitionRes()          {}
func (*R500) listCompetitionTeamsRes()     {}
func (*R500) listCompetitionUsersRes()     {}
func (*R500) listHostGroupHostsRes()       {}
func (*R500) listHostGroupRes()            {}
func (*R500) listHostRes()                 {}
func (*R500) listHostServicesRes()         {}
func (*R500) listPropertyRes()             {}
func (*R500) listRoundChecksRes()          {}
func (*R500) listRoundRes()                {}
func (*R500) listServiceChecksRes()        {}
func (*R500) listServicePropertiesRes()    {}
func (*R500) listServiceRes()              {}
func (*R500) listTeamHostsRes()            {}
func (*R500) listTeamRes()                 {}
func (*R500) listTeamUsersRes()            {}
func (*R500) listUserCompetitionsRes()     {}
func (*R500) listUserRes()                 {}
func (*R500) listUserTeamsRes()            {}
func (*R500) readCheckCompetitionRes()     {}
func (*R500) readCheckRes()                {}
func (*R500) readCheckRoundsRes()          {}
func (*R500) readCheckServicesRes()        {}
func (*R500) readCompetitionRes()          {}
func (*R500) readHostCompetitionRes()      {}
func (*R500) readHostGroupCompetitionRes() {}
func (*R500) readHostGroupRes()            {}
func (*R500) readHostGroupTeamRes()        {}
func (*R500) readHostHostGroupRes()        {}
func (*R500) readHostRes()                 {}
func (*R500) readHostTeamRes()             {}
func (*R500) readPropertyCompetitionRes()  {}
func (*R500) readPropertyRes()             {}
func (*R500) readPropertyServicesRes()     {}
func (*R500) readPropertyTeamRes()         {}
func (*R500) readRoundCompetitionRes()     {}
func (*R500) readRoundRes()                {}
func (*R500) readServiceCompetitionRes()   {}
func (*R500) readServiceHostsRes()         {}
func (*R500) readServiceRes()              {}
func (*R500) readServiceTeamRes()          {}
func (*R500) readTeamCompetitionRes()      {}
func (*R500) readTeamRes()                 {}
func (*R500) readUserRes()                 {}
func (*R500) updateCheckRes()              {}
func (*R500) updateCompetitionRes()        {}
func (*R500) updateHostGroupRes()          {}
func (*R500) updateHostRes()               {}
func (*R500) updatePropertyRes()           {}
func (*R500) updateRoundRes()              {}
func (*R500) updateServiceRes()            {}
func (*R500) updateTeamRes()               {}
func (*R500) updateUserRes()               {}

// Ref: #/components/schemas/Round_ChecksList
type RoundChecksList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *RoundChecksList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundChecksList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundChecksList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *RoundChecksList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *RoundChecksList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *RoundChecksList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *RoundChecksList) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *RoundChecksList) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *RoundChecksList) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *RoundChecksList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundChecksList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundChecksList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *RoundChecksList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *RoundChecksList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *RoundChecksList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *RoundChecksList) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *RoundChecksList) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *RoundChecksList) SetPassed(val bool) {
	s.Passed = val
}

// Ref: #/components/schemas/Round_CompetitionRead
type RoundCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *RoundCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *RoundCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *RoundCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *RoundCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *RoundCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *RoundCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *RoundCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *RoundCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *RoundCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *RoundCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *RoundCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *RoundCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *RoundCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *RoundCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *RoundCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *RoundCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *RoundCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *RoundCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*RoundCompetitionRead) readRoundCompetitionRes() {}

// Ref: #/components/schemas/RoundCreate
type RoundCreate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *RoundCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *RoundCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *RoundCreate) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *RoundCreate) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *RoundCreate) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *RoundCreate) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *RoundCreate) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *RoundCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *RoundCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *RoundCreate) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *RoundCreate) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *RoundCreate) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *RoundCreate) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *RoundCreate) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

func (*RoundCreate) createRoundRes() {}

// Ref: #/components/schemas/RoundList
type RoundList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *RoundList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *RoundList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *RoundList) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *RoundList) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *RoundList) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *RoundList) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *RoundList) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *RoundList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *RoundList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *RoundList) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *RoundList) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *RoundList) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *RoundList) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *RoundList) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

// Ref: #/components/schemas/RoundRead
type RoundRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *RoundRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *RoundRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *RoundRead) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *RoundRead) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *RoundRead) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *RoundRead) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *RoundRead) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *RoundRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *RoundRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *RoundRead) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *RoundRead) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *RoundRead) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *RoundRead) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *RoundRead) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

func (*RoundRead) readRoundRes() {}

// Ref: #/components/schemas/RoundUpdate
type RoundUpdate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	CompetitionID int       `json:"competition_id"`
	RoundNumber   int       `json:"round_number"`
	Note          string    `json:"note"`
	Err           string    `json:"err"`
	StartedAt     time.Time `json:"started_at"`
	FinishedAt    time.Time `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *RoundUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *RoundUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *RoundUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *RoundUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetRoundNumber returns the value of RoundNumber.
func (s *RoundUpdate) GetRoundNumber() int {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *RoundUpdate) GetNote() string {
	return s.Note
}

// GetErr returns the value of Err.
func (s *RoundUpdate) GetErr() string {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *RoundUpdate) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *RoundUpdate) GetFinishedAt() time.Time {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *RoundUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *RoundUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *RoundUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *RoundUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *RoundUpdate) SetRoundNumber(val int) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *RoundUpdate) SetNote(val string) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *RoundUpdate) SetErr(val string) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *RoundUpdate) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *RoundUpdate) SetFinishedAt(val time.Time) {
	s.FinishedAt = val
}

func (*RoundUpdate) updateRoundRes() {}

// Ref: #/components/schemas/Service_ChecksList
type ServiceChecksList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Log           string    `json:"log"`
	Error         string    `json:"error"`
	Passed        bool      `json:"passed"`
}

// GetID returns the value of ID.
func (s *ServiceChecksList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceChecksList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceChecksList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceChecksList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceChecksList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceChecksList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetLog returns the value of Log.
func (s *ServiceChecksList) GetLog() string {
	return s.Log
}

// GetError returns the value of Error.
func (s *ServiceChecksList) GetError() string {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *ServiceChecksList) GetPassed() bool {
	return s.Passed
}

// SetID sets the value of ID.
func (s *ServiceChecksList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceChecksList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceChecksList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceChecksList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceChecksList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceChecksList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetLog sets the value of Log.
func (s *ServiceChecksList) SetLog(val string) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *ServiceChecksList) SetError(val string) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *ServiceChecksList) SetPassed(val bool) {
	s.Passed = val
}

// Ref: #/components/schemas/Service_CompetitionRead
type ServiceCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *ServiceCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *ServiceCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *ServiceCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *ServiceCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *ServiceCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *ServiceCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *ServiceCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *ServiceCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *ServiceCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *ServiceCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *ServiceCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *ServiceCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ServiceCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *ServiceCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *ServiceCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *ServiceCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *ServiceCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*ServiceCompetitionRead) readServiceCompetitionRes() {}

// Ref: #/components/schemas/ServiceCreate
type ServiceCreate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *ServiceCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceCreate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceCreate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServiceCreate) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *ServiceCreate) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *ServiceCreate) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *ServiceCreate) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *ServiceCreate) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *ServiceCreate) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *ServiceCreate) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *ServiceCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceCreate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServiceCreate) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *ServiceCreate) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ServiceCreate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *ServiceCreate) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *ServiceCreate) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *ServiceCreate) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *ServiceCreate) SetRoundDelay(val int) {
	s.RoundDelay = val
}

func (*ServiceCreate) createServiceRes() {}

// Ref: #/components/schemas/Service_HostsRead
type ServiceHostsRead struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *ServiceHostsRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceHostsRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceHostsRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceHostsRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceHostsRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceHostsRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServiceHostsRead) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *ServiceHostsRead) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *ServiceHostsRead) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *ServiceHostsRead) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *ServiceHostsRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceHostsRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceHostsRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceHostsRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceHostsRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceHostsRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServiceHostsRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *ServiceHostsRead) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *ServiceHostsRead) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *ServiceHostsRead) SetEditable(val bool) {
	s.Editable = val
}

func (*ServiceHostsRead) readServiceHostsRes() {}

// Ref: #/components/schemas/ServiceList
type ServiceList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *ServiceList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServiceList) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *ServiceList) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *ServiceList) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *ServiceList) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *ServiceList) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *ServiceList) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *ServiceList) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *ServiceList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServiceList) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *ServiceList) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ServiceList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *ServiceList) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *ServiceList) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *ServiceList) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *ServiceList) SetRoundDelay(val int) {
	s.RoundDelay = val
}

// Ref: #/components/schemas/Service_PropertiesList
type ServicePropertiesList struct {
	ID            int                         `json:"id"`
	CreateTime    time.Time                   `json:"create_time"`
	UpdateTime    time.Time                   `json:"update_time"`
	CompetitionID int                         `json:"competition_id"`
	TeamID        int                         `json:"team_id"`
	Key           string                      `json:"key"`
	Value         string                      `json:"value"`
	Status        ServicePropertiesListStatus `json:"status"`
}

// GetID returns the value of ID.
func (s *ServicePropertiesList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServicePropertiesList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServicePropertiesList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServicePropertiesList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServicePropertiesList) GetTeamID() int {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *ServicePropertiesList) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *ServicePropertiesList) GetValue() string {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *ServicePropertiesList) GetStatus() ServicePropertiesListStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *ServicePropertiesList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServicePropertiesList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServicePropertiesList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServicePropertiesList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServicePropertiesList) SetTeamID(val int) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *ServicePropertiesList) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *ServicePropertiesList) SetValue(val string) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *ServicePropertiesList) SetStatus(val ServicePropertiesListStatus) {
	s.Status = val
}

type ServicePropertiesListStatus string

const (
	ServicePropertiesListStatusView ServicePropertiesListStatus = "view"
	ServicePropertiesListStatusEdit ServicePropertiesListStatus = "edit"
	ServicePropertiesListStatusHide ServicePropertiesListStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s ServicePropertiesListStatus) MarshalText() ([]byte, error) {
	switch s {
	case ServicePropertiesListStatusView:
		return []byte(s), nil
	case ServicePropertiesListStatusEdit:
		return []byte(s), nil
	case ServicePropertiesListStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ServicePropertiesListStatus) UnmarshalText(data []byte) error {
	switch ServicePropertiesListStatus(data) {
	case ServicePropertiesListStatusView:
		*s = ServicePropertiesListStatusView
		return nil
	case ServicePropertiesListStatusEdit:
		*s = ServicePropertiesListStatusEdit
		return nil
	case ServicePropertiesListStatusHide:
		*s = ServicePropertiesListStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ServiceRead
type ServiceRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *ServiceRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServiceRead) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *ServiceRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *ServiceRead) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *ServiceRead) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *ServiceRead) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *ServiceRead) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *ServiceRead) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *ServiceRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServiceRead) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *ServiceRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ServiceRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *ServiceRead) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *ServiceRead) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *ServiceRead) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *ServiceRead) SetRoundDelay(val int) {
	s.RoundDelay = val
}

func (*ServiceRead) readServiceRes() {}

// Ref: #/components/schemas/Service_TeamRead
type ServiceTeamRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *ServiceTeamRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceTeamRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceTeamRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceTeamRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceTeamRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceTeamRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *ServiceTeamRead) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *ServiceTeamRead) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *ServiceTeamRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceTeamRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceTeamRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceTeamRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceTeamRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceTeamRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *ServiceTeamRead) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *ServiceTeamRead) SetIndex(val int) {
	s.Index = val
}

func (*ServiceTeamRead) readServiceTeamRes() {}

// Ref: #/components/schemas/ServiceUpdate
type ServiceUpdate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	TeamID        int       `json:"team_id"`
	Name          string    `json:"name"`
	DisplayName   string    `json:"display_name"`
	Weight        int       `json:"weight"`
	PointBoost    int       `json:"point_boost"`
	RoundUnits    int       `json:"round_units"`
	RoundDelay    int       `json:"round_delay"`
}

// GetID returns the value of ID.
func (s *ServiceUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *ServiceUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *ServiceUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *ServiceUpdate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *ServiceUpdate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *ServiceUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *ServiceUpdate) GetTeamID() int {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *ServiceUpdate) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *ServiceUpdate) GetDisplayName() string {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *ServiceUpdate) GetWeight() int {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *ServiceUpdate) GetPointBoost() int {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *ServiceUpdate) GetRoundUnits() int {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *ServiceUpdate) GetRoundDelay() int {
	return s.RoundDelay
}

// SetID sets the value of ID.
func (s *ServiceUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *ServiceUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *ServiceUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *ServiceUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *ServiceUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *ServiceUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *ServiceUpdate) SetTeamID(val int) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *ServiceUpdate) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ServiceUpdate) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *ServiceUpdate) SetWeight(val int) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *ServiceUpdate) SetPointBoost(val int) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *ServiceUpdate) SetRoundUnits(val int) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *ServiceUpdate) SetRoundDelay(val int) {
	s.RoundDelay = val
}

func (*ServiceUpdate) updateServiceRes() {}

// Ref: #/components/schemas/Team_CompetitionRead
type TeamCompetitionRead struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *TeamCompetitionRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamCompetitionRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamCompetitionRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *TeamCompetitionRead) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *TeamCompetitionRead) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *TeamCompetitionRead) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *TeamCompetitionRead) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *TeamCompetitionRead) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *TeamCompetitionRead) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *TeamCompetitionRead) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *TeamCompetitionRead) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *TeamCompetitionRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamCompetitionRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamCompetitionRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *TeamCompetitionRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *TeamCompetitionRead) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *TeamCompetitionRead) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *TeamCompetitionRead) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *TeamCompetitionRead) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *TeamCompetitionRead) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *TeamCompetitionRead) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *TeamCompetitionRead) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

func (*TeamCompetitionRead) readTeamCompetitionRes() {}

// Ref: #/components/schemas/TeamCreate
type TeamCreate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *TeamCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *TeamCreate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *TeamCreate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *TeamCreate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *TeamCreate) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *TeamCreate) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *TeamCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *TeamCreate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *TeamCreate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *TeamCreate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *TeamCreate) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *TeamCreate) SetIndex(val int) {
	s.Index = val
}

func (*TeamCreate) createTeamRes() {}

// Ref: #/components/schemas/Team_HostsList
type TeamHostsList struct {
	ID               int       `json:"id"`
	CreateTime       time.Time `json:"create_time"`
	UpdateTime       time.Time `json:"update_time"`
	Pause            bool      `json:"pause"`
	Hidden           bool      `json:"hidden"`
	CompetitionID    int       `json:"competition_id"`
	TeamID           int       `json:"team_id"`
	Address          string    `json:"address"`
	AddressListRange string    `json:"address_list_range"`
	Editable         bool      `json:"editable"`
}

// GetID returns the value of ID.
func (s *TeamHostsList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamHostsList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamHostsList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *TeamHostsList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *TeamHostsList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *TeamHostsList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetTeamID returns the value of TeamID.
func (s *TeamHostsList) GetTeamID() int {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *TeamHostsList) GetAddress() string {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *TeamHostsList) GetAddressListRange() string {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *TeamHostsList) GetEditable() bool {
	return s.Editable
}

// SetID sets the value of ID.
func (s *TeamHostsList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamHostsList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamHostsList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *TeamHostsList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *TeamHostsList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *TeamHostsList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetTeamID sets the value of TeamID.
func (s *TeamHostsList) SetTeamID(val int) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *TeamHostsList) SetAddress(val string) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *TeamHostsList) SetAddressListRange(val string) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *TeamHostsList) SetEditable(val bool) {
	s.Editable = val
}

// Ref: #/components/schemas/TeamList
type TeamList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *TeamList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *TeamList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *TeamList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *TeamList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *TeamList) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *TeamList) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *TeamList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *TeamList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *TeamList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *TeamList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *TeamList) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *TeamList) SetIndex(val int) {
	s.Index = val
}

// Ref: #/components/schemas/TeamRead
type TeamRead struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *TeamRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *TeamRead) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *TeamRead) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *TeamRead) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *TeamRead) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *TeamRead) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *TeamRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *TeamRead) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *TeamRead) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *TeamRead) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *TeamRead) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *TeamRead) SetIndex(val int) {
	s.Index = val
}

func (*TeamRead) readTeamRes() {}

// Ref: #/components/schemas/TeamUpdate
type TeamUpdate struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *TeamUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *TeamUpdate) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *TeamUpdate) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *TeamUpdate) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *TeamUpdate) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *TeamUpdate) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *TeamUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *TeamUpdate) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *TeamUpdate) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *TeamUpdate) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *TeamUpdate) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *TeamUpdate) SetIndex(val int) {
	s.Index = val
}

func (*TeamUpdate) updateTeamRes() {}

// Ref: #/components/schemas/Team_UsersList
type TeamUsersList struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *TeamUsersList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *TeamUsersList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *TeamUsersList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *TeamUsersList) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *TeamUsersList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *TeamUsersList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *TeamUsersList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *TeamUsersList) SetUsername(val string) {
	s.Username = val
}

type UpdateCheckReq struct {
	UpdateTime  OptDateTime `json:"update_time"`
	Pause       OptBool     `json:"pause"`
	Hidden      OptBool     `json:"hidden"`
	Log         OptString   `json:"log"`
	Error       OptString   `json:"error"`
	Passed      OptBool     `json:"passed"`
	Competition OptInt      `json:"competition"`
	Rounds      OptInt      `json:"rounds"`
	Services    OptInt      `json:"services"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateCheckReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UpdateCheckReq) GetPause() OptBool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UpdateCheckReq) GetHidden() OptBool {
	return s.Hidden
}

// GetLog returns the value of Log.
func (s *UpdateCheckReq) GetLog() OptString {
	return s.Log
}

// GetError returns the value of Error.
func (s *UpdateCheckReq) GetError() OptString {
	return s.Error
}

// GetPassed returns the value of Passed.
func (s *UpdateCheckReq) GetPassed() OptBool {
	return s.Passed
}

// GetCompetition returns the value of Competition.
func (s *UpdateCheckReq) GetCompetition() OptInt {
	return s.Competition
}

// GetRounds returns the value of Rounds.
func (s *UpdateCheckReq) GetRounds() OptInt {
	return s.Rounds
}

// GetServices returns the value of Services.
func (s *UpdateCheckReq) GetServices() OptInt {
	return s.Services
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateCheckReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UpdateCheckReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateCheckReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetLog sets the value of Log.
func (s *UpdateCheckReq) SetLog(val OptString) {
	s.Log = val
}

// SetError sets the value of Error.
func (s *UpdateCheckReq) SetError(val OptString) {
	s.Error = val
}

// SetPassed sets the value of Passed.
func (s *UpdateCheckReq) SetPassed(val OptBool) {
	s.Passed = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateCheckReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetRounds sets the value of Rounds.
func (s *UpdateCheckReq) SetRounds(val OptInt) {
	s.Rounds = val
}

// SetServices sets the value of Services.
func (s *UpdateCheckReq) SetServices(val OptInt) {
	s.Services = val
}

type UpdateCompetitionReq struct {
	UpdateTime    OptDateTime `json:"update_time"`
	Hidden        OptBool     `json:"hidden"`
	Pause         OptBool     `json:"pause"`
	Name          OptString   `json:"name"`
	DisplayName   OptString   `json:"display_name"`
	RoundDuration OptFloat64  `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
	Teams         []int       `json:"teams"`
	Users         []int       `json:"users"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateCompetitionReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *UpdateCompetitionReq) GetHidden() OptBool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *UpdateCompetitionReq) GetPause() OptBool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *UpdateCompetitionReq) GetName() OptString {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateCompetitionReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *UpdateCompetitionReq) GetRoundDuration() OptFloat64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *UpdateCompetitionReq) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *UpdateCompetitionReq) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *UpdateCompetitionReq) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// GetTeams returns the value of Teams.
func (s *UpdateCompetitionReq) GetTeams() []int {
	return s.Teams
}

// GetUsers returns the value of Users.
func (s *UpdateCompetitionReq) GetUsers() []int {
	return s.Users
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateCompetitionReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateCompetitionReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *UpdateCompetitionReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *UpdateCompetitionReq) SetName(val OptString) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateCompetitionReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *UpdateCompetitionReq) SetRoundDuration(val OptFloat64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *UpdateCompetitionReq) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *UpdateCompetitionReq) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *UpdateCompetitionReq) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

// SetTeams sets the value of Teams.
func (s *UpdateCompetitionReq) SetTeams(val []int) {
	s.Teams = val
}

// SetUsers sets the value of Users.
func (s *UpdateCompetitionReq) SetUsers(val []int) {
	s.Users = val
}

type UpdateHostGroupReq struct {
	UpdateTime  OptDateTime `json:"update_time"`
	Pause       OptBool     `json:"pause"`
	Hidden      OptBool     `json:"hidden"`
	TeamID      OptInt      `json:"team_id"`
	Name        OptString   `json:"name"`
	Competition OptInt      `json:"competition"`
	Team        OptInt      `json:"team"`
	Hosts       []int       `json:"hosts"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateHostGroupReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UpdateHostGroupReq) GetPause() OptBool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UpdateHostGroupReq) GetHidden() OptBool {
	return s.Hidden
}

// GetTeamID returns the value of TeamID.
func (s *UpdateHostGroupReq) GetTeamID() OptInt {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *UpdateHostGroupReq) GetName() OptString {
	return s.Name
}

// GetCompetition returns the value of Competition.
func (s *UpdateHostGroupReq) GetCompetition() OptInt {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *UpdateHostGroupReq) GetTeam() OptInt {
	return s.Team
}

// GetHosts returns the value of Hosts.
func (s *UpdateHostGroupReq) GetHosts() []int {
	return s.Hosts
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateHostGroupReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UpdateHostGroupReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateHostGroupReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetTeamID sets the value of TeamID.
func (s *UpdateHostGroupReq) SetTeamID(val OptInt) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *UpdateHostGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateHostGroupReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *UpdateHostGroupReq) SetTeam(val OptInt) {
	s.Team = val
}

// SetHosts sets the value of Hosts.
func (s *UpdateHostGroupReq) SetHosts(val []int) {
	s.Hosts = val
}

type UpdateHostReq struct {
	UpdateTime       OptDateTime `json:"update_time"`
	Pause            OptBool     `json:"pause"`
	Hidden           OptBool     `json:"hidden"`
	TeamID           OptInt      `json:"team_id"`
	Address          OptString   `json:"address"`
	AddressListRange OptString   `json:"address_list_range"`
	Editable         OptBool     `json:"editable"`
	Competition      OptInt      `json:"competition"`
	Team             OptInt      `json:"team"`
	Services         []int       `json:"services"`
	HostGroup        OptInt      `json:"host_group"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateHostReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UpdateHostReq) GetPause() OptBool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UpdateHostReq) GetHidden() OptBool {
	return s.Hidden
}

// GetTeamID returns the value of TeamID.
func (s *UpdateHostReq) GetTeamID() OptInt {
	return s.TeamID
}

// GetAddress returns the value of Address.
func (s *UpdateHostReq) GetAddress() OptString {
	return s.Address
}

// GetAddressListRange returns the value of AddressListRange.
func (s *UpdateHostReq) GetAddressListRange() OptString {
	return s.AddressListRange
}

// GetEditable returns the value of Editable.
func (s *UpdateHostReq) GetEditable() OptBool {
	return s.Editable
}

// GetCompetition returns the value of Competition.
func (s *UpdateHostReq) GetCompetition() OptInt {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *UpdateHostReq) GetTeam() OptInt {
	return s.Team
}

// GetServices returns the value of Services.
func (s *UpdateHostReq) GetServices() []int {
	return s.Services
}

// GetHostGroup returns the value of HostGroup.
func (s *UpdateHostReq) GetHostGroup() OptInt {
	return s.HostGroup
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateHostReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UpdateHostReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateHostReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetTeamID sets the value of TeamID.
func (s *UpdateHostReq) SetTeamID(val OptInt) {
	s.TeamID = val
}

// SetAddress sets the value of Address.
func (s *UpdateHostReq) SetAddress(val OptString) {
	s.Address = val
}

// SetAddressListRange sets the value of AddressListRange.
func (s *UpdateHostReq) SetAddressListRange(val OptString) {
	s.AddressListRange = val
}

// SetEditable sets the value of Editable.
func (s *UpdateHostReq) SetEditable(val OptBool) {
	s.Editable = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateHostReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *UpdateHostReq) SetTeam(val OptInt) {
	s.Team = val
}

// SetServices sets the value of Services.
func (s *UpdateHostReq) SetServices(val []int) {
	s.Services = val
}

// SetHostGroup sets the value of HostGroup.
func (s *UpdateHostReq) SetHostGroup(val OptInt) {
	s.HostGroup = val
}

type UpdatePropertyReq struct {
	UpdateTime  OptDateTime                `json:"update_time"`
	TeamID      OptInt                     `json:"team_id"`
	Key         OptString                  `json:"key"`
	Value       OptString                  `json:"value"`
	Status      OptUpdatePropertyReqStatus `json:"status"`
	Competition OptInt                     `json:"competition"`
	Team        OptInt                     `json:"team"`
	Services    OptInt                     `json:"services"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdatePropertyReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetTeamID returns the value of TeamID.
func (s *UpdatePropertyReq) GetTeamID() OptInt {
	return s.TeamID
}

// GetKey returns the value of Key.
func (s *UpdatePropertyReq) GetKey() OptString {
	return s.Key
}

// GetValue returns the value of Value.
func (s *UpdatePropertyReq) GetValue() OptString {
	return s.Value
}

// GetStatus returns the value of Status.
func (s *UpdatePropertyReq) GetStatus() OptUpdatePropertyReqStatus {
	return s.Status
}

// GetCompetition returns the value of Competition.
func (s *UpdatePropertyReq) GetCompetition() OptInt {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *UpdatePropertyReq) GetTeam() OptInt {
	return s.Team
}

// GetServices returns the value of Services.
func (s *UpdatePropertyReq) GetServices() OptInt {
	return s.Services
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdatePropertyReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetTeamID sets the value of TeamID.
func (s *UpdatePropertyReq) SetTeamID(val OptInt) {
	s.TeamID = val
}

// SetKey sets the value of Key.
func (s *UpdatePropertyReq) SetKey(val OptString) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *UpdatePropertyReq) SetValue(val OptString) {
	s.Value = val
}

// SetStatus sets the value of Status.
func (s *UpdatePropertyReq) SetStatus(val OptUpdatePropertyReqStatus) {
	s.Status = val
}

// SetCompetition sets the value of Competition.
func (s *UpdatePropertyReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *UpdatePropertyReq) SetTeam(val OptInt) {
	s.Team = val
}

// SetServices sets the value of Services.
func (s *UpdatePropertyReq) SetServices(val OptInt) {
	s.Services = val
}

type UpdatePropertyReqStatus string

const (
	UpdatePropertyReqStatusView UpdatePropertyReqStatus = "view"
	UpdatePropertyReqStatusEdit UpdatePropertyReqStatus = "edit"
	UpdatePropertyReqStatusHide UpdatePropertyReqStatus = "hide"
)

// MarshalText implements encoding.TextMarshaler.
func (s UpdatePropertyReqStatus) MarshalText() ([]byte, error) {
	switch s {
	case UpdatePropertyReqStatusView:
		return []byte(s), nil
	case UpdatePropertyReqStatusEdit:
		return []byte(s), nil
	case UpdatePropertyReqStatusHide:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UpdatePropertyReqStatus) UnmarshalText(data []byte) error {
	switch UpdatePropertyReqStatus(data) {
	case UpdatePropertyReqStatusView:
		*s = UpdatePropertyReqStatusView
		return nil
	case UpdatePropertyReqStatusEdit:
		*s = UpdatePropertyReqStatusEdit
		return nil
	case UpdatePropertyReqStatusHide:
		*s = UpdatePropertyReqStatusHide
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type UpdateRoundReq struct {
	UpdateTime  OptDateTime `json:"update_time"`
	RoundNumber OptInt      `json:"round_number"`
	Note        OptString   `json:"note"`
	Err         OptString   `json:"err"`
	StartedAt   OptDateTime `json:"started_at"`
	FinishedAt  OptDateTime `json:"finished_at"`
	Competition OptInt      `json:"competition"`
	Checks      []int       `json:"checks"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateRoundReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetRoundNumber returns the value of RoundNumber.
func (s *UpdateRoundReq) GetRoundNumber() OptInt {
	return s.RoundNumber
}

// GetNote returns the value of Note.
func (s *UpdateRoundReq) GetNote() OptString {
	return s.Note
}

// GetErr returns the value of Err.
func (s *UpdateRoundReq) GetErr() OptString {
	return s.Err
}

// GetStartedAt returns the value of StartedAt.
func (s *UpdateRoundReq) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *UpdateRoundReq) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// GetCompetition returns the value of Competition.
func (s *UpdateRoundReq) GetCompetition() OptInt {
	return s.Competition
}

// GetChecks returns the value of Checks.
func (s *UpdateRoundReq) GetChecks() []int {
	return s.Checks
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateRoundReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetRoundNumber sets the value of RoundNumber.
func (s *UpdateRoundReq) SetRoundNumber(val OptInt) {
	s.RoundNumber = val
}

// SetNote sets the value of Note.
func (s *UpdateRoundReq) SetNote(val OptString) {
	s.Note = val
}

// SetErr sets the value of Err.
func (s *UpdateRoundReq) SetErr(val OptString) {
	s.Err = val
}

// SetStartedAt sets the value of StartedAt.
func (s *UpdateRoundReq) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *UpdateRoundReq) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateRoundReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetChecks sets the value of Checks.
func (s *UpdateRoundReq) SetChecks(val []int) {
	s.Checks = val
}

type UpdateServiceReq struct {
	UpdateTime  OptDateTime `json:"update_time"`
	Pause       OptBool     `json:"pause"`
	Hidden      OptBool     `json:"hidden"`
	TeamID      OptInt      `json:"team_id"`
	Name        OptString   `json:"name"`
	DisplayName OptString   `json:"display_name"`
	Weight      OptInt      `json:"weight"`
	PointBoost  OptInt      `json:"point_boost"`
	RoundUnits  OptInt      `json:"round_units"`
	RoundDelay  OptInt      `json:"round_delay"`
	Competition OptInt      `json:"competition"`
	Team        OptInt      `json:"team"`
	Hosts       OptInt      `json:"hosts"`
	Checks      []int       `json:"checks"`
	Properties  []int       `json:"properties"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateServiceReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UpdateServiceReq) GetPause() OptBool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UpdateServiceReq) GetHidden() OptBool {
	return s.Hidden
}

// GetTeamID returns the value of TeamID.
func (s *UpdateServiceReq) GetTeamID() OptInt {
	return s.TeamID
}

// GetName returns the value of Name.
func (s *UpdateServiceReq) GetName() OptString {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateServiceReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetWeight returns the value of Weight.
func (s *UpdateServiceReq) GetWeight() OptInt {
	return s.Weight
}

// GetPointBoost returns the value of PointBoost.
func (s *UpdateServiceReq) GetPointBoost() OptInt {
	return s.PointBoost
}

// GetRoundUnits returns the value of RoundUnits.
func (s *UpdateServiceReq) GetRoundUnits() OptInt {
	return s.RoundUnits
}

// GetRoundDelay returns the value of RoundDelay.
func (s *UpdateServiceReq) GetRoundDelay() OptInt {
	return s.RoundDelay
}

// GetCompetition returns the value of Competition.
func (s *UpdateServiceReq) GetCompetition() OptInt {
	return s.Competition
}

// GetTeam returns the value of Team.
func (s *UpdateServiceReq) GetTeam() OptInt {
	return s.Team
}

// GetHosts returns the value of Hosts.
func (s *UpdateServiceReq) GetHosts() OptInt {
	return s.Hosts
}

// GetChecks returns the value of Checks.
func (s *UpdateServiceReq) GetChecks() []int {
	return s.Checks
}

// GetProperties returns the value of Properties.
func (s *UpdateServiceReq) GetProperties() []int {
	return s.Properties
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateServiceReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UpdateServiceReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateServiceReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetTeamID sets the value of TeamID.
func (s *UpdateServiceReq) SetTeamID(val OptInt) {
	s.TeamID = val
}

// SetName sets the value of Name.
func (s *UpdateServiceReq) SetName(val OptString) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateServiceReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetWeight sets the value of Weight.
func (s *UpdateServiceReq) SetWeight(val OptInt) {
	s.Weight = val
}

// SetPointBoost sets the value of PointBoost.
func (s *UpdateServiceReq) SetPointBoost(val OptInt) {
	s.PointBoost = val
}

// SetRoundUnits sets the value of RoundUnits.
func (s *UpdateServiceReq) SetRoundUnits(val OptInt) {
	s.RoundUnits = val
}

// SetRoundDelay sets the value of RoundDelay.
func (s *UpdateServiceReq) SetRoundDelay(val OptInt) {
	s.RoundDelay = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateServiceReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetTeam sets the value of Team.
func (s *UpdateServiceReq) SetTeam(val OptInt) {
	s.Team = val
}

// SetHosts sets the value of Hosts.
func (s *UpdateServiceReq) SetHosts(val OptInt) {
	s.Hosts = val
}

// SetChecks sets the value of Checks.
func (s *UpdateServiceReq) SetChecks(val []int) {
	s.Checks = val
}

// SetProperties sets the value of Properties.
func (s *UpdateServiceReq) SetProperties(val []int) {
	s.Properties = val
}

type UpdateTeamReq struct {
	UpdateTime  OptDateTime `json:"update_time"`
	Pause       OptBool     `json:"pause"`
	Hidden      OptBool     `json:"hidden"`
	Name        OptString   `json:"name"`
	Index       OptInt      `json:"index"`
	Competition OptInt      `json:"competition"`
	Users       []int       `json:"users"`
	Hosts       []int       `json:"hosts"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateTeamReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UpdateTeamReq) GetPause() OptBool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UpdateTeamReq) GetHidden() OptBool {
	return s.Hidden
}

// GetName returns the value of Name.
func (s *UpdateTeamReq) GetName() OptString {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *UpdateTeamReq) GetIndex() OptInt {
	return s.Index
}

// GetCompetition returns the value of Competition.
func (s *UpdateTeamReq) GetCompetition() OptInt {
	return s.Competition
}

// GetUsers returns the value of Users.
func (s *UpdateTeamReq) GetUsers() []int {
	return s.Users
}

// GetHosts returns the value of Hosts.
func (s *UpdateTeamReq) GetHosts() []int {
	return s.Hosts
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateTeamReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UpdateTeamReq) SetPause(val OptBool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UpdateTeamReq) SetHidden(val OptBool) {
	s.Hidden = val
}

// SetName sets the value of Name.
func (s *UpdateTeamReq) SetName(val OptString) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *UpdateTeamReq) SetIndex(val OptInt) {
	s.Index = val
}

// SetCompetition sets the value of Competition.
func (s *UpdateTeamReq) SetCompetition(val OptInt) {
	s.Competition = val
}

// SetUsers sets the value of Users.
func (s *UpdateTeamReq) SetUsers(val []int) {
	s.Users = val
}

// SetHosts sets the value of Hosts.
func (s *UpdateTeamReq) SetHosts(val []int) {
	s.Hosts = val
}

type UpdateUserReq struct {
	UpdateTime   OptDateTime `json:"update_time"`
	Username     OptString   `json:"username"`
	Teams        []int       `json:"teams"`
	Competitions []int       `json:"competitions"`
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UpdateUserReq) GetUpdateTime() OptDateTime {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *UpdateUserReq) GetUsername() OptString {
	return s.Username
}

// GetTeams returns the value of Teams.
func (s *UpdateUserReq) GetTeams() []int {
	return s.Teams
}

// GetCompetitions returns the value of Competitions.
func (s *UpdateUserReq) GetCompetitions() []int {
	return s.Competitions
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UpdateUserReq) SetUpdateTime(val OptDateTime) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *UpdateUserReq) SetUsername(val OptString) {
	s.Username = val
}

// SetTeams sets the value of Teams.
func (s *UpdateUserReq) SetTeams(val []int) {
	s.Teams = val
}

// SetCompetitions sets the value of Competitions.
func (s *UpdateUserReq) SetCompetitions(val []int) {
	s.Competitions = val
}

// Ref: #/components/schemas/User_CompetitionsList
type UserCompetitionsList struct {
	ID            int         `json:"id"`
	CreateTime    time.Time   `json:"create_time"`
	UpdateTime    time.Time   `json:"update_time"`
	Hidden        bool        `json:"hidden"`
	Pause         bool        `json:"pause"`
	Name          string      `json:"name"`
	DisplayName   string      `json:"display_name"`
	RoundDuration float64     `json:"round_duration"`
	ToBeStartedAt OptDateTime `json:"to_be_started_at"`
	StartedAt     OptDateTime `json:"started_at"`
	FinishedAt    OptDateTime `json:"finished_at"`
}

// GetID returns the value of ID.
func (s *UserCompetitionsList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserCompetitionsList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserCompetitionsList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetHidden returns the value of Hidden.
func (s *UserCompetitionsList) GetHidden() bool {
	return s.Hidden
}

// GetPause returns the value of Pause.
func (s *UserCompetitionsList) GetPause() bool {
	return s.Pause
}

// GetName returns the value of Name.
func (s *UserCompetitionsList) GetName() string {
	return s.Name
}

// GetDisplayName returns the value of DisplayName.
func (s *UserCompetitionsList) GetDisplayName() string {
	return s.DisplayName
}

// GetRoundDuration returns the value of RoundDuration.
func (s *UserCompetitionsList) GetRoundDuration() float64 {
	return s.RoundDuration
}

// GetToBeStartedAt returns the value of ToBeStartedAt.
func (s *UserCompetitionsList) GetToBeStartedAt() OptDateTime {
	return s.ToBeStartedAt
}

// GetStartedAt returns the value of StartedAt.
func (s *UserCompetitionsList) GetStartedAt() OptDateTime {
	return s.StartedAt
}

// GetFinishedAt returns the value of FinishedAt.
func (s *UserCompetitionsList) GetFinishedAt() OptDateTime {
	return s.FinishedAt
}

// SetID sets the value of ID.
func (s *UserCompetitionsList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserCompetitionsList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserCompetitionsList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetHidden sets the value of Hidden.
func (s *UserCompetitionsList) SetHidden(val bool) {
	s.Hidden = val
}

// SetPause sets the value of Pause.
func (s *UserCompetitionsList) SetPause(val bool) {
	s.Pause = val
}

// SetName sets the value of Name.
func (s *UserCompetitionsList) SetName(val string) {
	s.Name = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UserCompetitionsList) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetRoundDuration sets the value of RoundDuration.
func (s *UserCompetitionsList) SetRoundDuration(val float64) {
	s.RoundDuration = val
}

// SetToBeStartedAt sets the value of ToBeStartedAt.
func (s *UserCompetitionsList) SetToBeStartedAt(val OptDateTime) {
	s.ToBeStartedAt = val
}

// SetStartedAt sets the value of StartedAt.
func (s *UserCompetitionsList) SetStartedAt(val OptDateTime) {
	s.StartedAt = val
}

// SetFinishedAt sets the value of FinishedAt.
func (s *UserCompetitionsList) SetFinishedAt(val OptDateTime) {
	s.FinishedAt = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserCreate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserCreate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *UserCreate) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserCreate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserCreate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *UserCreate) SetUsername(val string) {
	s.Username = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *UserList) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *UserList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *UserList) SetUsername(val string) {
	s.Username = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserRead) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserRead) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *UserRead) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserRead) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserRead) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *UserRead) SetUsername(val string) {
	s.Username = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/User_TeamsList
type UserTeamsList struct {
	ID            int       `json:"id"`
	CreateTime    time.Time `json:"create_time"`
	UpdateTime    time.Time `json:"update_time"`
	Pause         bool      `json:"pause"`
	Hidden        bool      `json:"hidden"`
	CompetitionID int       `json:"competition_id"`
	Name          string    `json:"name"`
	Index         int       `json:"index"`
}

// GetID returns the value of ID.
func (s *UserTeamsList) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserTeamsList) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserTeamsList) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetPause returns the value of Pause.
func (s *UserTeamsList) GetPause() bool {
	return s.Pause
}

// GetHidden returns the value of Hidden.
func (s *UserTeamsList) GetHidden() bool {
	return s.Hidden
}

// GetCompetitionID returns the value of CompetitionID.
func (s *UserTeamsList) GetCompetitionID() int {
	return s.CompetitionID
}

// GetName returns the value of Name.
func (s *UserTeamsList) GetName() string {
	return s.Name
}

// GetIndex returns the value of Index.
func (s *UserTeamsList) GetIndex() int {
	return s.Index
}

// SetID sets the value of ID.
func (s *UserTeamsList) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserTeamsList) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserTeamsList) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetPause sets the value of Pause.
func (s *UserTeamsList) SetPause(val bool) {
	s.Pause = val
}

// SetHidden sets the value of Hidden.
func (s *UserTeamsList) SetHidden(val bool) {
	s.Hidden = val
}

// SetCompetitionID sets the value of CompetitionID.
func (s *UserTeamsList) SetCompetitionID(val int) {
	s.CompetitionID = val
}

// SetName sets the value of Name.
func (s *UserTeamsList) SetName(val string) {
	s.Name = val
}

// SetIndex sets the value of Index.
func (s *UserTeamsList) SetIndex(val int) {
	s.Index = val
}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID         int       `json:"id"`
	CreateTime time.Time `json:"create_time"`
	UpdateTime time.Time `json:"update_time"`
	Username   string    `json:"username"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() int {
	return s.ID
}

// GetCreateTime returns the value of CreateTime.
func (s *UserUpdate) GetCreateTime() time.Time {
	return s.CreateTime
}

// GetUpdateTime returns the value of UpdateTime.
func (s *UserUpdate) GetUpdateTime() time.Time {
	return s.UpdateTime
}

// GetUsername returns the value of Username.
func (s *UserUpdate) GetUsername() string {
	return s.Username
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val int) {
	s.ID = val
}

// SetCreateTime sets the value of CreateTime.
func (s *UserUpdate) SetCreateTime(val time.Time) {
	s.CreateTime = val
}

// SetUpdateTime sets the value of UpdateTime.
func (s *UserUpdate) SetUpdateTime(val time.Time) {
	s.UpdateTime = val
}

// SetUsername sets the value of Username.
func (s *UserUpdate) SetUsername(val string) {
	s.Username = val
}

func (*UserUpdate) updateUserRes() {}
