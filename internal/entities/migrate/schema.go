// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// APITokensColumns holds the columns for the "api_tokens" table.
	APITokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "expired_at", Type: field.TypeTime},
	}
	// APITokensTable holds the schema information for the "api_tokens" table.
	APITokensTable = &schema.Table{
		Name:       "api_tokens",
		Columns:    APITokensColumns,
		PrimaryKey: []*schema.Column{APITokensColumns[0]},
	}
	// ChecksColumns holds the columns for the "checks" table.
	ChecksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "log", Type: field.TypeString, Nullable: true},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "outcome_status", Type: field.TypeEnum, Nullable: true, Enums: []string{"PASSED", "FAILED", "INVALID"}},
		{Name: "progress_status", Type: field.TypeEnum, Enums: []string{"started", "finished"}, Default: "started"},
		{Name: "host_service_id", Type: field.TypeString},
		{Name: "round_id", Type: field.TypeString},
	}
	// ChecksTable holds the schema information for the "checks" table.
	ChecksTable = &schema.Table{
		Name:       "checks",
		Columns:    ChecksColumns,
		PrimaryKey: []*schema.Column{ChecksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "checks_host_services_checks",
				Columns:    []*schema.Column{ChecksColumns[7]},
				RefColumns: []*schema.Column{HostServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "checks_rounds_checks",
				Columns:    []*schema.Column{ChecksColumns[8]},
				RefColumns: []*schema.Column{RoundsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompetitionsColumns holds the columns for the "competitions" table.
	CompetitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 32},
		{Name: "display_name", Type: field.TypeString, Size: 64},
		{Name: "viewable_to_public", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
	}
	// CompetitionsTable holds the schema information for the "competitions" table.
	CompetitionsTable = &schema.Table{
		Name:       "competitions",
		Columns:    CompetitionsColumns,
		PrimaryKey: []*schema.Column{CompetitionsColumns[0]},
	}
	// HostsColumns holds the columns for the "hosts" table.
	HostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "address", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
	}
	// HostsTable holds the schema information for the "hosts" table.
	HostsTable = &schema.Table{
		Name:       "hosts",
		Columns:    HostsColumns,
		PrimaryKey: []*schema.Column{HostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hosts_teams_hosts",
				Columns:    []*schema.Column{HostsColumns[6]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HostServicesColumns holds the columns for the "host_services" table.
	HostServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "host_id", Type: field.TypeString},
		{Name: "service_id", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
	}
	// HostServicesTable holds the schema information for the "host_services" table.
	HostServicesTable = &schema.Table{
		Name:       "host_services",
		Columns:    HostServicesColumns,
		PrimaryKey: []*schema.Column{HostServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "host_services_hosts_hostservices",
				Columns:    []*schema.Column{HostServicesColumns[7]},
				RefColumns: []*schema.Column{HostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_services_services_hostservices",
				Columns:    []*schema.Column{HostServicesColumns[8]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_services_teams_hostservices",
				Columns:    []*schema.Column{HostServicesColumns[9]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HostServiceReportsColumns holds the columns for the "host_service_reports" table.
	HostServiceReportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "points", Type: field.TypeInt},
		{Name: "passing", Type: field.TypeBool},
		{Name: "latest_check_time", Type: field.TypeTime},
		{Name: "host_service_id", Type: field.TypeString, Unique: true},
		{Name: "service_id", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
		{Name: "team_report_id", Type: field.TypeString, Nullable: true},
	}
	// HostServiceReportsTable holds the schema information for the "host_service_reports" table.
	HostServiceReportsTable = &schema.Table{
		Name:       "host_service_reports",
		Columns:    HostServiceReportsColumns,
		PrimaryKey: []*schema.Column{HostServiceReportsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "host_service_reports_host_services_hostservicereport",
				Columns:    []*schema.Column{HostServiceReportsColumns[6]},
				RefColumns: []*schema.Column{HostServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_service_reports_services_hostservicereports",
				Columns:    []*schema.Column{HostServiceReportsColumns[7]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_service_reports_teams_hostservicereports",
				Columns:    []*schema.Column{HostServiceReportsColumns[8]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_service_reports_team_reports_hostservicereports",
				Columns:    []*schema.Column{HostServiceReportsColumns[9]},
				RefColumns: []*schema.Column{TeamReportsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PropertiesColumns holds the columns for the "properties" table.
	PropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "host_service_id", Type: field.TypeString},
	}
	// PropertiesTable holds the schema information for the "properties" table.
	PropertiesTable = &schema.Table{
		Name:       "properties",
		Columns:    PropertiesColumns,
		PrimaryKey: []*schema.Column{PropertiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "properties_host_services_properties",
				Columns:    []*schema.Column{PropertiesColumns[5]},
				RefColumns: []*schema.Column{HostServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RoundsColumns holds the columns for the "rounds" table.
	RoundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "round_number", Type: field.TypeInt, Unique: true},
		{Name: "num_of_intended_checks", Type: field.TypeInt, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"started", "ongoing", "calculated", "finished", "incomplete"}, Default: "started"},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
	}
	// RoundsTable holds the schema information for the "rounds" table.
	RoundsTable = &schema.Table{
		Name:       "rounds",
		Columns:    RoundsColumns,
		PrimaryKey: []*schema.Column{RoundsColumns[0]},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"ftp", "ssh", "winrm", "ping", "http", "ldap", "dns", "smb", "imap", "sql", "caldav"}},
		{Name: "weight", Type: field.TypeInt, Default: 1},
		{Name: "point_boost", Type: field.TypeInt, Default: 0},
		{Name: "round_frequency", Type: field.TypeInt, Default: 1},
		{Name: "round_delay", Type: field.TypeInt, Default: 0},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "number", Type: field.TypeInt, Unique: true},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
	}
	// TeamReportsColumns holds the columns for the "team_reports" table.
	TeamReportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "points", Type: field.TypeInt},
		{Name: "team_id", Type: field.TypeString, Unique: true},
	}
	// TeamReportsTable holds the schema information for the "team_reports" table.
	TeamReportsTable = &schema.Table{
		Name:       "team_reports",
		Columns:    TeamReportsColumns,
		PrimaryKey: []*schema.Column{TeamReportsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "team_reports_teams_teamreport",
				Columns:    []*schema.Column{TeamReportsColumns[4]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		APITokensTable,
		ChecksTable,
		CompetitionsTable,
		HostsTable,
		HostServicesTable,
		HostServiceReportsTable,
		PropertiesTable,
		RoundsTable,
		ServicesTable,
		TeamsTable,
		TeamReportsTable,
	}
)

func init() {
	ChecksTable.ForeignKeys[0].RefTable = HostServicesTable
	ChecksTable.ForeignKeys[1].RefTable = RoundsTable
	HostsTable.ForeignKeys[0].RefTable = TeamsTable
	HostServicesTable.ForeignKeys[0].RefTable = HostsTable
	HostServicesTable.ForeignKeys[1].RefTable = ServicesTable
	HostServicesTable.ForeignKeys[2].RefTable = TeamsTable
	HostServiceReportsTable.ForeignKeys[0].RefTable = HostServicesTable
	HostServiceReportsTable.ForeignKeys[1].RefTable = ServicesTable
	HostServiceReportsTable.ForeignKeys[2].RefTable = TeamsTable
	HostServiceReportsTable.ForeignKeys[3].RefTable = TeamReportsTable
	PropertiesTable.ForeignKeys[0].RefTable = HostServicesTable
	TeamReportsTable.ForeignKeys[0].RefTable = TeamsTable
}
