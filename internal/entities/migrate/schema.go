// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChecksColumns holds the columns for the "checks" table.
	ChecksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "log", Type: field.TypeString},
		{Name: "error", Type: field.TypeString},
		{Name: "passed", Type: field.TypeBool},
		{Name: "round_id", Type: field.TypeString},
		{Name: "host_service_id", Type: field.TypeString},
		{Name: "round_checks", Type: field.TypeString, Nullable: true},
		{Name: "team_id", Type: field.TypeString},
	}
	// ChecksTable holds the schema information for the "checks" table.
	ChecksTable = &schema.Table{
		Name:       "checks",
		Columns:    ChecksColumns,
		PrimaryKey: []*schema.Column{ChecksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "checks_rounds_rounds",
				Columns:    []*schema.Column{ChecksColumns[6]},
				RefColumns: []*schema.Column{RoundsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "checks_host_services_checks",
				Columns:    []*schema.Column{ChecksColumns[7]},
				RefColumns: []*schema.Column{HostServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "checks_rounds_checks",
				Columns:    []*schema.Column{ChecksColumns[8]},
				RefColumns: []*schema.Column{RoundsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "checks_teams_checks",
				Columns:    []*schema.Column{ChecksColumns[9]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompetitionsColumns holds the columns for the "competitions" table.
	CompetitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 32},
		{Name: "display_name", Type: field.TypeString, Size: 64},
		{Name: "viewable_to_public", Type: field.TypeBool, Nullable: true},
		{Name: "to_be_started_at", Type: field.TypeTime, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
	}
	// CompetitionsTable holds the schema information for the "competitions" table.
	CompetitionsTable = &schema.Table{
		Name:       "competitions",
		Columns:    CompetitionsColumns,
		PrimaryKey: []*schema.Column{CompetitionsColumns[0]},
	}
	// HostsColumns holds the columns for the "hosts" table.
	HostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "address", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
	}
	// HostsTable holds the schema information for the "hosts" table.
	HostsTable = &schema.Table{
		Name:       "hosts",
		Columns:    HostsColumns,
		PrimaryKey: []*schema.Column{HostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hosts_teams_hosts",
				Columns:    []*schema.Column{HostsColumns[4]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// HostServicesColumns holds the columns for the "host_services" table.
	HostServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "display_name", Type: field.TypeString, Size: 64},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "weight", Type: field.TypeInt, Default: 1},
		{Name: "point_boost", Type: field.TypeInt, Default: 1},
		{Name: "round_units", Type: field.TypeInt, Default: 1},
		{Name: "round_delay", Type: field.TypeInt, Default: 1},
		{Name: "host_id", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
	}
	// HostServicesTable holds the schema information for the "host_services" table.
	HostServicesTable = &schema.Table{
		Name:       "host_services",
		Columns:    HostServicesColumns,
		PrimaryKey: []*schema.Column{HostServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "host_services_hosts_hostservices",
				Columns:    []*schema.Column{HostServicesColumns[9]},
				RefColumns: []*schema.Column{HostsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "host_services_teams_hostservices",
				Columns:    []*schema.Column{HostServicesColumns[10]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PropertiesColumns holds the columns for the "properties" table.
	PropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"view", "edit", "hide"}, Default: "view"},
		{Name: "host_service_id", Type: field.TypeString},
		{Name: "team_id", Type: field.TypeString},
	}
	// PropertiesTable holds the schema information for the "properties" table.
	PropertiesTable = &schema.Table{
		Name:       "properties",
		Columns:    PropertiesColumns,
		PrimaryKey: []*schema.Column{PropertiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "properties_host_services_properties",
				Columns:    []*schema.Column{PropertiesColumns[4]},
				RefColumns: []*schema.Column{HostServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "properties_teams_properties",
				Columns:    []*schema.Column{PropertiesColumns[5]},
				RefColumns: []*schema.Column{TeamsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ReportsColumns holds the columns for the "reports" table.
	ReportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "log", Type: field.TypeString},
		{Name: "error", Type: field.TypeString},
		{Name: "competition_id", Type: field.TypeString},
	}
	// ReportsTable holds the schema information for the "reports" table.
	ReportsTable = &schema.Table{
		Name:       "reports",
		Columns:    ReportsColumns,
		PrimaryKey: []*schema.Column{ReportsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reports_competitions_reports",
				Columns:    []*schema.Column{ReportsColumns[3]},
				RefColumns: []*schema.Column{CompetitionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RoundsColumns holds the columns for the "rounds" table.
	RoundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "round_number", Type: field.TypeInt},
		{Name: "note", Type: field.TypeString},
		{Name: "err", Type: field.TypeString},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "finished_at", Type: field.TypeTime},
		{Name: "competition_id", Type: field.TypeString},
	}
	// RoundsTable holds the schema information for the "rounds" table.
	RoundsTable = &schema.Table{
		Name:       "rounds",
		Columns:    RoundsColumns,
		PrimaryKey: []*schema.Column{RoundsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rounds_competitions_rounds",
				Columns:    []*schema.Column{RoundsColumns[6]},
				RefColumns: []*schema.Column{CompetitionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "display_name", Type: field.TypeString, Size: 64},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "competition_id", Type: field.TypeString},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "services_competitions_services",
				Columns:    []*schema.Column{ServicesColumns[5]},
				RefColumns: []*schema.Column{CompetitionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TeamsColumns holds the columns for the "teams" table.
	TeamsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Size: 32},
		{Name: "display_name", Type: field.TypeString, Size: 64},
		{Name: "pause", Type: field.TypeBool, Nullable: true},
		{Name: "hidden", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "number", Type: field.TypeInt},
		{Name: "competition_id", Type: field.TypeString},
	}
	// TeamsTable holds the schema information for the "teams" table.
	TeamsTable = &schema.Table{
		Name:       "teams",
		Columns:    TeamsColumns,
		PrimaryKey: []*schema.Column{TeamsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teams_competitions_teams",
				Columns:    []*schema.Column{TeamsColumns[6]},
				RefColumns: []*schema.Column{CompetitionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChecksTable,
		CompetitionsTable,
		HostsTable,
		HostServicesTable,
		PropertiesTable,
		ReportsTable,
		RoundsTable,
		ServicesTable,
		TeamsTable,
	}
)

func init() {
	ChecksTable.ForeignKeys[0].RefTable = RoundsTable
	ChecksTable.ForeignKeys[1].RefTable = HostServicesTable
	ChecksTable.ForeignKeys[2].RefTable = RoundsTable
	ChecksTable.ForeignKeys[3].RefTable = TeamsTable
	HostsTable.ForeignKeys[0].RefTable = TeamsTable
	HostServicesTable.ForeignKeys[0].RefTable = HostsTable
	HostServicesTable.ForeignKeys[1].RefTable = TeamsTable
	PropertiesTable.ForeignKeys[0].RefTable = HostServicesTable
	PropertiesTable.ForeignKeys[1].RefTable = TeamsTable
	ReportsTable.ForeignKeys[0].RefTable = CompetitionsTable
	RoundsTable.ForeignKeys[0].RefTable = CompetitionsTable
	ServicesTable.ForeignKeys[0].RefTable = CompetitionsTable
	TeamsTable.ForeignKeys[0].RefTable = CompetitionsTable
}
